{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPublicSharedMetadata",
          "name": "_sharedMetadata",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        }
      ],
      "name": "airdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getZorbRenderAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "gradientForAddress",
      "outputs": [
        {
          "internalType": "bytes[5]",
          "name": "",
          "type": "bytes[5]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintIsOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "marketPlaces",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "isKnown",
          "type": "bool"
        }
      ],
      "name": "setKnownMarketplaces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "zorbForAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162003991380380620039918339810160408190526200003491620001e1565b60408051808201825260058152645a6f72627360d81b6020808301918252835180850190945260048452632d27a92160e11b9084015281519192916200007d916000916200013b565b508051620000939060019060208401906200013b565b505050620000b0620000aa620000dc60201b60201c565b620000e0565b6001600160a01b038116608052620000d5600962000132602090811b62000dcd17901c565b5062000250565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b828054620001499062000213565b90600052602060002090601f0160209004810192826200016d5760008555620001b8565b82601f106200018857805160ff1916838001178555620001b8565b82800160010185558215620001b8579182015b82811115620001b85782518255916020019190600101906200019b565b50620001c6929150620001ca565b5090565b5b80821115620001c65760008155600101620001cb565b600060208284031215620001f457600080fd5b81516001600160a01b03811681146200020c57600080fd5b9392505050565b600181811c908216806200022857607f821691505b602082108114156200024a57634e487b7160e01b600052602260045260246000fd5b50919050565b6080516137176200027a60003960008181610ae801528181610b630152610c5801526137176000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063aa1152ab1161007c578063aa1152ab146102d1578063b88d4fde146102d9578063c87b56dd146102ec578063de909942146102ff578063e985e9c514610312578063f2fde38b1461034e57600080fd5b8063715018a614610277578063729ad39e1461027f5780638da5cb5b1461029257806391557ac4146102a357806395d89b41146102b6578063a22cb465146102be57600080fd5b806318160ddd1161011557806318160ddd1461020257806323b872dd1461021857806342842e0e1461022b5780636352211e1461023e5780636411fb451461025157806370a082311461026457600080fd5b806301ffc9a71461015d57806303ff85ff1461018557806306fdde03146101a5578063081812fc146101ba578063095ea7b3146101e55780631249c58b146101fa575b600080fd5b61017061016b3660046127d3565b610361565b60405190151581526020015b60405180910390f35b610198610193366004612805565b6103b3565b60405161017c919061287a565b6101ad6103c4565b60405161017c91906128c7565b6101cd6101c83660046128da565b610456565b6040516001600160a01b03909116815260200161017c565b6101f86101f33660046128f3565b6104f0565b005b6101f8610606565b61020a61066c565b60405190815260200161017c565b6101f861022636600461291f565b610688565b6101f861023936600461291f565b6106b9565b6101cd61024c3660046128da565b6106d4565b6101f861025f366004612970565b61074b565b61020a610272366004612805565b6107ec565b6101f8610873565b6101f861028d366004612a3b565b6108a7565b6006546001600160a01b03166101cd565b6101cd6102b13660046128da565b610941565b6101ad610a09565b6101f86102cc366004612aed565b610a18565b610170610a23565b6101f86102e7366004612b4a565b610a4c565b6101ad6102fa3660046128da565b610a7e565b6101ad61030d366004612805565b610c29565b610170610320366004612bf9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101f861035c366004612805565b610d32565b60006001600160e01b031982166380ac58cd60e01b148061039257506001600160e01b03198216635b5e139f60e01b145b806103ad57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6103bb612796565b6103ad82610dd6565b6060600080546103d390612c32565b80601f01602080910402602001604051908101604052809291908181526020018280546103ff90612c32565b801561044c5780601f106104215761010080835404028352916020019161044c565b820191906000526020600020905b81548152906001019060200180831161042f57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104d45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104fb826106d4565b9050806001600160a01b0316836001600160a01b031614156105695760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104cb565b336001600160a01b038216148061058557506105858133610320565b6105f75760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104cb565b61060183836110ba565b505050565b61060e610a23565b61064a5760405162461bcd60e51b815260206004820152600d60248201526c26b4b73a103737ba1037b832b760991b60448201526064016104cb565b61065c3361065760095490565b611128565b61066a600980546001019055565b565b6000600161067960095490565b6106839190612c83565b905090565b6106923382611276565b6106ae5760405162461bcd60e51b81526004016104cb90612c9a565b61060183838361136d565b61060183838360405180602001604052806000815250610a4c565b6000818152600260205260408120546001600160a01b0316806103ad5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104cb565b6006546001600160a01b031633146107755760405162461bcd60e51b81526004016104cb90612ceb565b60005b828110156107e657816007600086868581811061079757610797612d20565b90506020020160208101906107ac9190612805565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806107de81612d36565b915050610778565b50505050565b60006001600160a01b0382166108575760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016104cb565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b0316331461089d5760405162461bcd60e51b81526004016104cb90612ceb565b61066a6000611514565b6108af610a23565b6108eb5760405162461bcd60e51b815260206004820152600d60248201526c26b4b73a103737ba1037b832b760991b60448201526064016104cb565b60005b815181101561093d5761091d82828151811061090c5761090c612d20565b602002602001015161065760095490565b61092b600980546001019055565b8061093581612d36565b9150506108ee565b5050565b6040516331a9108f60e11b81526004810182905260009081903090636352211e90602401602060405180830381865afa158015610982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a69190612d51565b6001600160a01b03811660009081526007602052604090205490915060ff1680156109e757506000838152600860205260409020546001600160a01b031615155b156103ad5750506000908152600860205260409020546001600160a01b031690565b6060600180546103d390612c32565b61093d338383611566565b60006361cfdfd0421180156106835750610a4462024ea06361cfdfd0612d6e565b421115905090565b610a563383611276565b610a725760405162461bcd60e51b81526004016104cb90612c9a565b6107e684848484611635565b6000818152600260205260409020546060906001600160a01b0316610ad05760405162461bcd60e51b81526020600482015260086024820152672737903a37b5b2b760c11b60448201526064016104cb565b60405162b86e3360e51b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063170dc66090602401600060405180830381865afa158015610b37573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b5f9190810190612d86565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d01fde8c828384610b9f61030d89610941565b604051602001610bb29493929190612e19565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401610bdd91906128c7565b600060405180830381865afa158015610bfa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c229190810190612d86565b9392505050565b60606000610c36836103b3565b80516020808301516040808501516060860151608087015192519697506000967f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169663d5fb1b1996610c979691959194939201612fd8565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401610cc291906128c7565b600060405180830381865afa158015610cdf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d079190810190612d86565b905080604051602001610d1a91906133f5565b60405160208183030381529060405292505050919050565b6006546001600160a01b03163314610d5c5760405162461bcd60e51b81526004016104cb90612ceb565b6001600160a01b038116610dc15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cb565b610dca81611514565b50565b80546001019055565b610dde612796565b6001600160a01b038216600060118260131a60180281610e0057610e0061343a565b0490506000602283601d1a60050281610e1b57610e1b61343a565b046020019050606160338460171a60050281610e3957610e3961343a565b0401604801600281049050600060108560181a81610e5957610e5961343a565b04605101905060006080866015600b91901a0260ff1681610e7c57610e7c61343a565b046046019050600a8203811115610e94575060091981015b6040805160a0810190915280610f0e610ec989601c1a60028b60191a81610ebd57610ebd61343a565b0660ff168a6000611668565b610ee960028b601c1a81610edf57610edf61343a565b06878760646117bc565b610f0960028c601a1a81610eff57610eff61343a565b068a8a6064611804565b61187c565b8152602001610f7c610f3c89601c1a60028b60191a81610f3057610f3061343a565b0660ff168a600a611668565b610f5c60028b601c1a81610f5257610f5261343a565b068787605a6117bc565b610f0960028c601a1a81610f7257610f7261343a565b068a8a605a611804565b8152602001610fea610faa89601c1a60028b60191a81610f9e57610f9e61343a565b0660ff168a6046611668565b610fca60028b601c1a81610fc057610fc061343a565b06878760466117bc565b610f0960028c601a1a81610fe057610fe061343a565b068a8a6046611804565b815260200161105861101889601c1a60028b60191a8161100c5761100c61343a565b0660ff168a605a611668565b61103860028b601c1a8161102e5761102e61343a565b06878760146117bc565b610f0960028c601a1a8161104e5761104e61343a565b068a8a6014611804565b81526020016110ac61108689601c1a60028b60191a8161107a5761107a61343a565b0660ff168a6064611668565b6110a660028b601c1a8161109c5761109c61343a565b06878760006117bc565b8861187c565b905298975050505050505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906110ef826106d4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b03821661117e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104cb565b6000818152600260205260409020546001600160a01b0316156111e35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104cb565b6111ef600083836118c3565b6001600160a01b0382166000908152600360205260408120805460019290611218908490612d6e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152600260205260408120546001600160a01b03166112ef5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104cb565b60006112fa836106d4565b9050806001600160a01b0316846001600160a01b031614806113355750836001600160a01b031661132a84610456565b6001600160a01b0316145b8061136557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611380826106d4565b6001600160a01b0316146113e45760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104cb565b6001600160a01b0382166114465760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104cb565b6114518383836118c3565b61145c6000826110ba565b6001600160a01b0383166000908152600360205260408120805460019290611485908490612c83565b90915550506001600160a01b03821660009081526003602052604081208054600192906114b3908490612d6e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156115c85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104cb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61164084848461136d565b61164c84848484611912565b6107e65760405162461bcd60e51b81526004016104cb90613450565b6000806116766004876134a2565b60ff16905083816116e3576116da861561169a5761169582600a6134c4565b6116a5565b6116a5600a83613505565b6116b29060ff8716613544565b826116c160ff88166064613505565b6116cb9190613544565b6116d591906134c4565b611a0d565b92505050611365565b816001141561170b576116da86156117005761169582601e6134c4565b6116a5601e83613505565b8160021415611766576116da861561172d576117288260326134c4565b611738565b611738603283613505565b6117448660ff16611a40565b61174e9190613544565b8261175b8760ff16611a40565b6116c1906064613505565b6117b160808860ff161161177b57600061177e565b60015b60ff16871561178e57603c611792565b603b195b61179c9190613544565b6117a690836134c4565b61173890601e6134c4565b979650505050505050565b60008060ff86166117ec576117d083611f36565b60ff169050606481810386028583020104600101915050611365565b50816064818103860285830201049695505050505050565b60008060ff86166118225761181883611f36565b60ff169050611831565b61182b83612292565b60ff1690505b606461183d85836135c9565b86611849846064612c83565b61185391906135c9565b61185d9190612d6e565b61186791906135e8565b611872906001612d6e565b9695505050505050565b606061188784612698565b61189084612698565b61189984612698565b6040516020016118ab939291906135fc565b60405160208183030381529060405290509392505050565b6001600160a01b03821660009081526007602052604090205460ff161561060157600081815260086020526040902080546001600160a01b0385166001600160a01b0319909116179055505050565b60006001600160a01b0384163b15611a0557604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061195690339089908890889060040161367d565b6020604051808303816000875af1925050508015611991575060408051601f3d908101601f1916820190925261198e918101906136b0565b60015b6119eb573d8080156119bf576040519150601f19603f3d011682016040523d82523d6000602084013e6119c4565b606091505b5080516119e35760405162461bcd60e51b81526004016104cb90613450565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611365565b506001611365565b606490056000808212611a2657610168825b0692915050565b610168826000190281611a1f57611a1f61343a565b919050565b6000600d8261ffff161015611a5757506000919050565b60118261ffff161015611a6c57506001919050565b60138261ffff161015611a8157506002919050565b60158261ffff161015611a9657506003919050565b60178261ffff161015611aab57506004919050565b60188261ffff161015611ac057506005919050565b60198261ffff161015611ad557506006919050565b601b8261ffff161015611aea57506007919050565b601c8261ffff161015611aff57506008919050565b601d8261ffff161015611b1457506009919050565b601e8261ffff161015611b295750600a919050565b601f8261ffff161015611b3e5750600b919050565b60208261ffff161015611b535750600d919050565b60218261ffff161015611b685750600e919050565b60228261ffff161015611b7d5750600f919050565b60238261ffff161015611b9257506011919050565b60248261ffff161015611ba757506012919050565b60258261ffff161015611bbc57506014919050565b60268261ffff161015611bd157506015919050565b60278261ffff161015611be657506017919050565b60288261ffff161015611bfb57506019919050565b60298261ffff161015611c105750601b919050565b602a8261ffff161015611c255750601d919050565b602b8261ffff161015611c3a5750601f919050565b602c8261ffff161015611c4f57506022919050565b602d8261ffff161015611c6457506024919050565b602e8261ffff161015611c7957506026919050565b602f8261ffff161015611c8e57506029919050565b60308261ffff161015611ca35750602c919050565b60318261ffff161015611cb85750602f919050565b60328261ffff161015611ccd57506032919050565b60338261ffff161015611ce257506034919050565b60348261ffff161015611cf757506037919050565b60358261ffff161015611d0c5750603a919050565b60368261ffff161015611d215750603d919050565b60378261ffff161015611d365750603f919050565b60388261ffff161015611d4b57506041919050565b60398261ffff161015611d6057506044919050565b603a8261ffff161015611d7557506046919050565b603b8261ffff161015611d8a57506048919050565b603c8261ffff161015611d9f5750604a919050565b603d8261ffff161015611db45750604c919050565b603e8261ffff161015611dc95750604e919050565b603f8261ffff161015611dde5750604f919050565b60408261ffff161015611df357506051919050565b60418261ffff161015611e0857506052919050565b60428261ffff161015611e1d57506054919050565b60438261ffff161015611e3257506055919050565b60448261ffff161015611e4757506056919050565b60458261ffff161015611e5c57506058919050565b60468261ffff161015611e7157506059919050565b60478261ffff161015611e865750605a919050565b60488261ffff161015611e9b5750605b919050565b604a8261ffff161015611eb05750605c919050565b604b8261ffff161015611ec55750605d919050565b604c8261ffff161015611eda5750605e919050565b604e8261ffff161015611eef5750605f919050565b60508261ffff161015611f0457506060919050565b60528261ffff161015611f1957506061919050565b60568261ffff161015611f2e57506062919050565b506063919050565b60006027821015611f4957506000919050565b602d821015611f5a57506001919050565b6031821015611f6b57506002919050565b6034821015611f7c57506003919050565b6035821015611f8d57506004919050565b6036821015611f9e57506004919050565b6037821015611faf57506005919050565b6038821015611fc057506005919050565b6039821015611fd157506006919050565b603a821015611fe257506006919050565b603b821015611ff357506007919050565b603c82101561200457506007919050565b603d82101561201557506008919050565b603e82101561202657506009919050565b603f82101561203757506009919050565b60408210156120485750600a919050565b60418210156120595750600b919050565b604282101561206a5750600c919050565b604382101561207b5750600d919050565b604482101561208c5750600e919050565b604582101561209d5750600f919050565b60468210156120ae57506010919050565b60478210156120bf57506012919050565b60488210156120d057506013919050565b60498210156120e157506014919050565b604a8210156120f257506016919050565b604b82101561210357506017919050565b604c82101561211457506019919050565b604d8210156121255750601b919050565b604e8210156121365750601c919050565b604f8210156121475750601e919050565b605082101561215857506020919050565b605182101561216957506022919050565b605282101561217a57506025919050565b605382101561218b57506027919050565b605482101561219c57506029919050565b60558210156121ad5750602c919050565b60568210156121be5750602f919050565b60578210156121cf57506031919050565b60588210156121e057506034919050565b60598210156121f157506037919050565b605a8210156122025750603b919050565b605b8210156122135750603e919050565b605c82101561222457506041919050565b605d82101561223557506045919050565b605e82101561224657506049919050565b605f8210156122575750604d919050565b606082101561226857506051919050565b606182101561227957506055919050565b606282101561228a5750605a919050565b50605f919050565b600060168210156122a557506000919050565b601c8210156122b657506001919050565b60208210156122c757506002919050565b60208210156122d857506003919050565b60228210156122e957506003919050565b60248210156122fa57506004919050565b602782101561230b57506005919050565b602982101561231c57506006919050565b602b82101561232d57506007919050565b602e82101561233e57506009919050565b602f82101561234f5750600a919050565b60318210156123605750600b919050565b60328210156123715750600c919050565b60338210156123825750600d919050565b60358210156123935750600e919050565b60368210156123a45750600f919050565b60378210156123b557506010919050565b60388210156123c657506011919050565b60398210156123d757506012919050565b603a8210156123e857506013919050565b603b8210156123f957506014919050565b603c82101561240a57506015919050565b603d82101561241b57506016919050565b603e82101561242c57506017919050565b603f82101561243d57506019919050565b604082101561244e5750601a919050565b604182101561245f5750601b919050565b60428210156124705750601c919050565b60438210156124815750601e919050565b60448210156124925750601f919050565b60458210156124a357506020919050565b60468210156124b457506022919050565b60478210156124c557506023919050565b60488210156124d657506025919050565b60498210156124e757506026919050565b604a8210156124f857506028919050565b604b8210156125095750602a919050565b604c82101561251a5750602b919050565b604d82101561252b5750602d919050565b604e82101561253c5750602f919050565b604f82101561254d57506031919050565b605082101561255e57506033919050565b605182101561256f57506035919050565b605282101561258057506037919050565b605382101561259157506039919050565b60548210156125a25750603b919050565b60558210156125b35750603d919050565b60568210156125c45750603f919050565b60578210156125d557506041919050565b60588210156125e657506044919050565b60598210156125f757506046919050565b605a82101561260857506048919050565b605b8210156126195750604b919050565b605c82101561262a5750604d919050565b605d82101561263b57506050919050565b605e82101561264c57506053919050565b605f82101561265d57506055919050565b606082101561266e57506058919050565b606182101561267f5750605b919050565b60628210156126905750605e919050565b506061919050565b6060816126bc5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156126e657806126d081612d36565b91506126df9050600a836135e8565b91506126c0565b60008167ffffffffffffffff811115612701576127016129f4565b6040519080825280601f01601f19166020018201604052801561272b576020820181803683370190505b5090505b841561136557612740600183612c83565b915061274d600a866136cd565b612758906030612d6e565b60f81b81838151811061276d5761276d612d20565b60200101906001600160f81b031916908160001a90535061278f600a866135e8565b945061272f565b6040518060a001604052806005905b60608152602001906001900390816127a55790505090565b6001600160e01b031981168114610dca57600080fd5b6000602082840312156127e557600080fd5b8135610c22816127bd565b6001600160a01b0381168114610dca57600080fd5b60006020828403121561281757600080fd5b8135610c22816127f0565b60005b8381101561283d578181015183820152602001612825565b838111156107e65750506000910152565b60008151808452612866816020860160208601612822565b601f01601f19169290920160200192915050565b602080825260009060c0830183820185845b60058110156128bb57601f198785030183526128a984835161284e565b9350918401919084019060010161288c565b50919695505050505050565b602081526000610c22602083018461284e565b6000602082840312156128ec57600080fd5b5035919050565b6000806040838503121561290657600080fd5b8235612911816127f0565b946020939093013593505050565b60008060006060848603121561293457600080fd5b833561293f816127f0565b9250602084013561294f816127f0565b929592945050506040919091013590565b80358015158114611a3b57600080fd5b60008060006040848603121561298557600080fd5b833567ffffffffffffffff8082111561299d57600080fd5b818601915086601f8301126129b157600080fd5b8135818111156129c057600080fd5b8760208260051b85010111156129d557600080fd5b6020928301955093506129eb9186019050612960565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612a3357612a336129f4565b604052919050565b60006020808385031215612a4e57600080fd5b823567ffffffffffffffff80821115612a6657600080fd5b818501915085601f830112612a7a57600080fd5b813581811115612a8c57612a8c6129f4565b8060051b9150612a9d848301612a0a565b8181529183018401918481019088841115612ab757600080fd5b938501935b83851015612ae15784359250612ad1836127f0565b8282529385019390850190612abc565b98975050505050505050565b60008060408385031215612b0057600080fd5b8235612b0b816127f0565b9150612b1960208401612960565b90509250929050565b600067ffffffffffffffff821115612b3c57612b3c6129f4565b50601f01601f191660200190565b60008060008060808587031215612b6057600080fd5b8435612b6b816127f0565b93506020850135612b7b816127f0565b925060408501359150606085013567ffffffffffffffff811115612b9e57600080fd5b8501601f81018713612baf57600080fd5b8035612bc2612bbd82612b22565b612a0a565b818152886020838501011115612bd757600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215612c0c57600080fd5b8235612c17816127f0565b91506020830135612c27816127f0565b809150509250929050565b600181811c90821680612c4657607f821691505b60208210811415612c6757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612c9557612c95612c6d565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612d4a57612d4a612c6d565b5060010190565b600060208284031215612d6357600080fd5b8151610c22816127f0565b60008219821115612d8157612d81612c6d565b500190565b600060208284031215612d9857600080fd5b815167ffffffffffffffff811115612daf57600080fd5b8201601f81018413612dc057600080fd5b8051612dce612bbd82612b22565b818152856020838501011115612de357600080fd5b612df4826020830160208601612822565b95945050505050565b60008151612e0f818560208601612822565b9290920192915050565b6f7b226e616d65223a20225a6f7262202360801b81528451600090612e45816010850160208a01612822565b7f222c20226465736372697074696f6e223a20225a6f72627320776572652064696010918401918201527f73747269627574656420666f722066726565206279205a4f5241206f6e204e6560308201527f772059656172e280997320323032322e2045616368204e465420696d6275657360508201527f207468652070726f70657274696573206f66206974732077616c6c657420686f60708201527f6c6465722c20616e64207768656e2073656e7420746f20736f6d656f6e65206560908201527f6c73652c2077696c6c207472616e73666f726d2e5c6e5c6e566965772074686960b08201527f73204e4654206174205b7a6f72622e6465762f6e66742f00000000000000000060d08201528551612f668160e7840160208a01612822565b612ae1612fca612fc4612faa612fa460e7868801017f5d2868747470733a2f2f7a6f72622e6465762f6e66742f000000000000000000815260170190565b8a612dfd565b6d149116101134b6b0b3b2911d101160911b8152600e0190565b87612dfd565b61227d60f01b815260020190565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323081527f30302f737667222076696577426f783d223020302031313020313130223e3c6460208201527f6566733e3c72616469616c4772616469656e742069643d22677a72222067726160408201527f6469656e745472616e73666f726d3d227472616e736c6174652836362e34353760608201527f382032342e3335373529207363616c652837352e32393038292220677261646960808201527f656e74556e6974733d227573657253706163654f6e5573652220723d2231222060a08201527f63783d2230222063793d223025223e3c73746f70206f66667365743d2231352e60c0820152701b1912911039ba37b816b1b7b637b91e9160791b60e08201526000865161310e8160f1850160208b01612822565b612ae161322561321f6131e96131e36131ab6131a561316d61316760f18a8d01017f22202f3e3c73746f70206f66667365743d2233392e353825222073746f702d6381526537b637b91e9160d11b602082015260260190565b8f612dfd565b7f22202f3e3c73746f70206f66667365743d2237322e393225222073746f702d6381526537b637b91e9160d11b602082015260260190565b8c612dfd565b7f22202f3e3c73746f70206f66667365743d2239302e363325222073746f702d6381526537b637b91e9160d11b602082015260260190565b89612dfd565b7f22202f3e3c73746f70206f66667365743d2231303025222073746f702d636f6c81526337b91e9160e11b602082015260240190565b86612dfd565b7f22202f3e3c2f72616469616c4772616469656e743e3c2f646566733e3c67207481527f72616e73666f726d3d227472616e736c61746528352c3529223e3c706174682060208201527f643d224d313030203530433130302032322e333835382037372e36313432203060408201527f20353020304332322e33383538203020302032322e333835382030203530433060608201527f2037372e363134322032322e3338353820313030203530203130304337372e3660808201527f31343220313030203130302037372e36313432203130302035305a222066696c60a08201527f6c3d2275726c2823677a722922202f3e3c70617468207374726f6b653d22726760c08201527f626128302c302c302c302e30373529222066696c6c3d227472616e737061726560e08201527f6e7422207374726f6b652d77696474683d22312220643d224d35302c302e35636101008201527f32372e332c302c34392e352c32322e322c34392e352c34392e355337372e332c6101208201527f39392e352c35302c39392e3553302e352c37372e332c302e352c35305332322e6101408201527f372c302e352c35302c302e357a22202f3e3c2f673e3c2f7376673e000000000061016082015261017b0190565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081526000825161342d81601a850160208701612822565b91909101601a0192915050565b634e487b7160e01b600052601260045260246000fd5b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060ff8316806134b5576134b561343a565b8060ff84160691505092915050565b600080821280156001600160ff1b03849003851316156134e6576134e6612c6d565b600160ff1b83900384128116156134ff576134ff612c6d565b50500190565b60008083128015600160ff1b85018412161561352357613523612c6d565b6001600160ff1b038401831381161561353e5761353e612c6d565b50500390565b60006001600160ff1b038184138284138082168684048611161561356a5761356a612c6d565b600160ff1b600087128281168783058912161561358957613589612c6d565b600087129250878205871284841616156135a5576135a5612c6d565b878505871281841616156135bb576135bb612c6d565b505050929093029392505050565b60008160001904831182151516156135e3576135e3612c6d565b500290565b6000826135f7576135f761343a565b500490565b630d0e6d8560e31b81526000845161361b816004850160208901612822565b61016160f51b600491840191820152845161363d816006840160208901612822565b6201296160ed1b600692909101918201528351613661816009840160208801612822565b61252960f01b60099290910191820152600b0195945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118729083018461284e565b6000602082840312156136c257600080fd5b8151610c22816127bd565b6000826136dc576136dc61343a565b50069056fea264697066735822122093448ad8696db12427765f606acb30aad0f43ea2587bb1a9f318b1db63ba4da064736f6c634300080a0033",
    "sourceMap": "7558:6195:20:-:0;;;8597:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:8;;;;;;;;;;;-1:-1:-1;;;1390:113:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:8;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:8;:::i;:::-;-1:-1:-1;1479:17:8;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;921:32:7;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;-1:-1:-1;;;;;8682:32:20;::::1;;::::0;8724:26:::1;:14;:24;;::::0;;::::1;;;:26:::0;::::1;:::i;:::-;8597:160:::0;7558:6195;;640:96:13;719:10;;640:96::o;2270:187:7:-;2362:6;;;-1:-1:-1;;;;;2378:17:7;;;-1:-1:-1;;;;;;2378:17:7;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:14:-;1032:19;;1050:1;1032:19;;;945:123::o;7558:6195:20:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7558:6195:20;;;-1:-1:-1;7558:6195:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:321:25;115:6;168:2;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;210:16;;-1:-1:-1;;;;;255:31:25;;245:42;;235:70;;301:1;298;291:12;235:70;324:5;14:321;-1:-1:-1;;;14:321:25:o;340:380::-;419:1;415:12;;;;462;;;483:61;;537:4;529:6;525:17;515:27;;483:61;590:2;582:6;579:14;559:18;556:38;553:161;;;636:10;631:3;627:20;624:1;617:31;671:4;668:1;661:15;699:4;696:1;689:15;553:161;;340:380;;;:::o;:::-;7558:6195:20;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "7558:6195:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:8;;;;;;:::i;:::-;;:::i;:::-;;;565:14:25;;558:22;540:41;;528:2;513:18;1570:300:8;;;;;;;;10154:137:20;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2488:98:8:-;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2769:32:25;;;2751:51;;2739:2;2724:18;4000:217:8;2605:203:25;3538:401:8;;;;;;:::i;:::-;;:::i;:::-;;9421:167:20;;;:::i;9627:159::-;;;:::i;:::-;;;3279:25:25;;;3267:2;3252:18;9627:159:20;3133:177:25;4727:330:8;;;;;;:::i;:::-;;:::i;5123:179::-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;8913:230:20:-;;;;;;:::i;:::-;;:::i;1929:205:8:-;;;;;;:::i;:::-;;:::i;1668:101:7:-;;;:::i;9896:252:20:-;;;;;;:::i;:::-;;:::i;1036:85:7:-;1108:6;;-1:-1:-1;;;;;1108:6:7;1036:85;;12496:303:20;;;;;;:::i;:::-;;:::i;2650:102:8:-;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;9223:156:20:-;;;:::i;5368:320:8:-;;;;;;:::i;:::-;;:::i;12918:833:20:-;;;;;;:::i;:::-;;:::i;10409:1554::-;;;;;;:::i;:::-;;:::i;4503:162:8:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:25:8;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162;1918:198:7;;;;;;:::i;:::-;;:::i;1570:300:8:-;1672:4;-1:-1:-1;;;;;;1707:40:8;;-1:-1:-1;;;1707:40:8;;:104;;-1:-1:-1;;;;;;;1763:48:8;;-1:-1:-1;;;1763:48:8;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:16;;;1827:36:8;1688:175;1570:300;-1:-1:-1;;1570:300:8:o;10154:137:20:-;10217:15;;:::i;:::-;10251:33;10279:4;10251:27;:33::i;2488:98:8:-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:8;4095:73;;;;-1:-1:-1;;;4095:73:8;;8585:2:25;4095:73:8;;;8567:21:25;8624:2;8604:18;;;8597:30;8663:34;8643:18;;;8636:62;-1:-1:-1;;;8714:18:25;;;8707:42;8766:19;;4095:73:8;;;;;;;;;-1:-1:-1;4186:24:8;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:8;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:8;:2;-1:-1:-1;;;;;3675:11:8;;;3667:57;;;;-1:-1:-1;;;3667:57:8;;8998:2:25;3667:57:8;;;8980:21:25;9037:2;9017:18;;;9010:30;9076:34;9056:18;;;9049:62;-1:-1:-1;;;9127:18:25;;;9120:31;9168:19;;3667:57:8;8796:397:25;3667:57:8;719:10:13;-1:-1:-1;;;;;3756:21:8;;;;:62;;-1:-1:-1;3781:37:8;3798:5;719:10:13;4503:162:8;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:8;;9400:2:25;3735:165:8;;;9382:21:25;9439:2;9419:18;;;9412:30;9478:34;9458:18;;;9451:62;9549:26;9529:18;;;9522:54;9593:19;;3735:165:8;9198:420:25;3735:165:8;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;9421:167:20:-;9462:12;:10;:12::i;:::-;9454:38;;;;-1:-1:-1;;;9454:38:20;;9825:2:25;9454:38:20;;;9807:21:25;9864:2;9844:18;;;9837:30;-1:-1:-1;;;9883:18:25;;;9876:43;9936:18;;9454:38:20;9623:337:25;9454:38:20;9502:43;9508:10;9520:24;:14;918::14;;827:112;9520:24:20;9502:5;:43::i;:::-;9555:26;:14;1032:19:14;;1050:1;1032:19;;;945:123;9555:26:20;9421:167::o;9627:159::-;9671:7;9778:1;9751:24;:14;918::14;;827:112;9751:24:20;:28;;;;:::i;:::-;9744:35;;9627:159;:::o;4727:330:8:-;4916:41;719:10:13;4949:7:8;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:8;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;5123:179::-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:8;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:8;;10847:2:25;2324:73:8;;;10829:21:25;10886:2;10866:18;;;10859:30;10925:34;10905:18;;;10898:62;-1:-1:-1;;;10976:18:25;;;10969:39;11025:19;;2324:73:8;10645:405:25;8913:230:20;1108:6:7;;-1:-1:-1;;;;;1108:6:7;719:10:13;1248:23:7;1240:68;;;;-1:-1:-1;;;1240:68:7;;;;;;;:::i;:::-;9024:9:20::1;9019:118;9039:23:::0;;::::1;9019:118;;;9119:7;9083:16;:33;9100:12;;9113:1;9100:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9083:33:20::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;9083:33:20;:43;;-1:-1:-1;;9083:43:20::1;::::0;::::1;;::::0;;;::::1;::::0;;9064:3;::::1;::::0;::::1;:::i;:::-;;;;9019:118;;;;8913:230:::0;;;:::o;1929:205:8:-;2001:7;-1:-1:-1;;;;;2028:19:8;;2020:74;;;;-1:-1:-1;;;2020:74:8;;11890:2:25;2020:74:8;;;11872:21:25;11929:2;11909:18;;;11902:30;11968:34;11948:18;;;11941:62;-1:-1:-1;;;12019:18:25;;;12012:40;12069:19;;2020:74:8;11688:406:25;2020:74:8;-1:-1:-1;;;;;;2111:16:8;;;;;:9;:16;;;;;;;1929:205::o;1668:101:7:-;1108:6;;-1:-1:-1;;;;;1108:6:7;719:10:13;1248:23:7;1240:68;;;;-1:-1:-1;;;1240:68:7;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;9896:252:20:-:0;9959:12;:10;:12::i;:::-;9951:38;;;;-1:-1:-1;;;9951:38:20;;9825:2:25;9951:38:20;;;9807:21:25;9864:2;9844:18;;;9837:30;-1:-1:-1;;;9883:18:25;;;9876:43;9936:18;;9951:38:20;9623:337:25;9951:38:20;10004:9;9999:143;10023:2;:9;10019:1;:13;9999:143;;;10053:38;10059:2;10062:1;10059:5;;;;;;;;:::i;:::-;;;;;;;10066:24;:14;918::14;;827:112;10053:38:20;10105:26;:14;1032:19:14;;1050:1;1032:19;;;945:123;10105:26:20;10034:3;;;;:::i;:::-;;;;9999:143;;;;9896:252;:::o;12496:303::-;12601:36;;-1:-1:-1;;;12601:36:20;;;;;3279:25:25;;;12564:7:20;;;;12614:4;;12601:27;;3252:18:25;;12601:36:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12651:25:20;;;;;;:16;:25;;;;;;12583:54;;-1:-1:-1;12651:25:20;;:63;;;;-1:-1:-1;12710:3:20;12680:18;;;:9;:18;;;;;;-1:-1:-1;;;;;12680:18:20;:34;;12651:63;12647:122;;;-1:-1:-1;;12740:18:20;;;;:9;:18;;;;;;-1:-1:-1;;;;;12740:18:20;;12496:303::o;2650:102:8:-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:13;4411:8:8;4421;4378:18;:52::i;9223:156:20:-;9266:4;7734:10;9289:15;:31;:83;;;;-1:-1:-1;9343:29:20;7841:8;7734:10;9343:29;:::i;:::-;9324:15;:48;;9282:90;;9223:156;:::o;5368:320:8:-;5537:41;719:10:13;5570:7:8;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:8;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;12918:833:20:-;7225:4:8;7248:16;;;:7;:16;;;;;;12983:13:20;;-1:-1:-1;;;;;7248:16:8;13008:37:20;;;;-1:-1:-1;;;13008:37:20;;12690:2:25;13008:37:20;;;12672:21:25;12729:1;12709:18;;;12702:29;-1:-1:-1;;;12747:18:25;;;12740:38;12795:18;;13008:37:20;12488:331:25;13008:37:20;13081:38;;-1:-1:-1;;;13081:38:20;;;;;3279:25:25;;;13056:22:20;;13081:14;-1:-1:-1;;;;;13081:29:20;;;;3252:18:25;;13081:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13081:38:20;;;;;;;;;;;;:::i;:::-;13056:63;;13137:14;-1:-1:-1;;;;;13137:33:20;;13254:8;13524;13593;13653:45;13668:29;13689:7;13668:20;:29::i;13653:45::-;13184:550;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13137:607;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13137:607:20;;;;;;;;;;;;:::i;:::-;13130:614;12918:833;-1:-1:-1;;;12918:833:20:o;10409:1554::-;10468:13;10493:22;10518:24;10537:4;10518:18;:24::i;:::-;11068:9;;;11153;;;;11238;;;;;11323;;;;11406;;;;10617:1249;;10493:49;;-1:-1:-1;10552:21:20;;10576:14;-1:-1:-1;;;;;10576:27:20;;;;10617:1249;;11068:9;;11153;;11238;11323;10617:1249;;:::i;:::-;;;;;;;;;;;;;10576:1300;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10576:1300:20;;;;;;;;;;;;:::i;:::-;10552:1324;;11947:7;11900:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;11886:70;;;;10409:1554;;;:::o;1918:198:7:-;1108:6;;-1:-1:-1;;;;;1108:6:7;719:10:13;1248:23:7;1240:68;;;;-1:-1:-1;;;1240:68:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:7;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:7;;20945:2:25;1998:73:7::1;::::0;::::1;20927:21:25::0;20984:2;20964:18;;;20957:30;21023:34;21003:18;;;20996:62;-1:-1:-1;;;21074:18:25;;;21067:36;21120:19;;1998:73:7::1;20743:402:25::0;1998:73:7::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;945:123:14:-;1032:19;;1050:1;1032:19;;;945:123::o;20434:4444:18:-;20523:15;;:::i;:::-;-1:-1:-1;;;;;20606:22:18;;20578:17;20706:2;20606:22;20687:7;20677:18;20700:2;20663:39;20662:46;;;;;:::i;:::-;;;-1:-1:-1;20735:22:18;20818:2;20775:9;20785:6;20775:17;20797:1;20761:37;20760:60;;;;;:::i;:::-;;20839:2;20760:81;;-1:-1:-1;20909:2:18;20985;20958:9;20968:6;20958:17;20980:1;20944:37;20943:44;;;;;:::i;:::-;;20925:85;21007:2;20925:85;21049:1;20925:85;21033:17;;-1:-1:-1;21065:23:18;21143:2;21105:9;21115:6;21105:17;21091:54;;;;;:::i;:::-;;21164:2;21091:75;;-1:-1:-1;21194:21:18;21260:3;21232:9;21242:7;21254:2;21232:18;;;21226:30;:25;21218:39;:45;;;;;:::i;:::-;;21266:2;21218:50;21194:74;;21333:2;21315:15;:20;21299:13;:36;21295:111;;;-1:-1:-1;;;21371:20:18;;21295:111;21420:3441;;;;;;;;;;21466:682;21497:194;21536:9;21546:6;21536:17;21607:1;21586:9;21596:6;21586:17;21580:28;;;;;:::i;:::-;;21497:194;;21634:8;21668:1;21497:7;:194::i;:::-;21713:199;21780:1;21759:9;21769:6;21759:17;21753:28;;;;;:::i;:::-;;21807:15;21848:13;21887:3;21713:14;:199::i;:::-;21934:196;22000:1;21979:9;21989:6;21979:17;21973:28;;;;;:::i;:::-;;22027:14;22067:12;22105:3;21934:13;:196::i;:::-;21466:9;:682::i;:::-;21420:3441;;;;22187:681;22218:195;22257:9;22267:6;22257:17;22328:1;22307:9;22317:6;22307:17;22301:28;;;;;:::i;:::-;;22218:195;;22355:8;22389:2;22218:7;:195::i;:::-;22435:198;22502:1;22481:9;22491:6;22481:17;22475:28;;;;;:::i;:::-;;22529:15;22570:13;22609:2;22435:14;:198::i;:::-;22655:195;22721:1;22700:9;22710:6;22700:17;22694:28;;;;;:::i;:::-;;22748:14;22788:12;22826:2;22655:13;:195::i;22187:681::-;21420:3441;;;;22907:681;22938:195;22977:9;22987:6;22977:17;23048:1;23027:9;23037:6;23027:17;23021:28;;;;;:::i;:::-;;22938:195;;23075:8;23109:2;22938:7;:195::i;:::-;23155:198;23222:1;23201:9;23211:6;23201:17;23195:28;;;;;:::i;:::-;;23249:15;23290:13;23329:2;23155:14;:198::i;:::-;23375:195;23441:1;23420:9;23430:6;23420:17;23414:28;;;;;:::i;:::-;;23468:14;23508:12;23546:2;23375:13;:195::i;22907:681::-;21420:3441;;;;23627:681;23658:195;23697:9;23707:6;23697:17;23768:1;23747:9;23757:6;23747:17;23741:28;;;;;:::i;:::-;;23658:195;;23795:8;23829:2;23658:7;:195::i;:::-;23875:198;23942:1;23921:9;23931:6;23921:17;23915:28;;;;;:::i;:::-;;23969:15;24010:13;24049:2;23875:14;:198::i;:::-;24095:195;24161:1;24140:9;24150:6;24140:17;24134:28;;;;;:::i;:::-;;24188:14;24228:12;24266:2;24095:13;:195::i;23627:681::-;21420:3441;;;;24347:500;24378:196;24417:9;24427:6;24417:17;24488:1;24467:9;24477:6;24467:17;24461:28;;;;;:::i;:::-;;24378:196;;24515:8;24549:3;24378:7;:196::i;:::-;24596:197;24663:1;24642:9;24652:6;24642:17;24636:28;;;;;:::i;:::-;;24690:15;24731:13;24770:1;24596:14;:197::i;:::-;24815:14;24347:9;:500::i;:::-;21420:3441;;;20434:4444;-1:-1:-1;;;;;;;;20434:4444:18:o;11169:171:8:-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:8;-1:-1:-1;;;;;11243:29:8;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:8;;;;;;;;;;;11169:171;;:::o;9079:427::-;-1:-1:-1;;;;;9158:16:8;;9150:61;;;;-1:-1:-1;;;9150:61:8;;21484:2:25;9150:61:8;;;21466:21:25;;;21503:18;;;21496:30;21562:34;21542:18;;;21535:62;21614:18;;9150:61:8;21282:356:25;9150:61:8;7225:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:8;:30;9221:58;;;;-1:-1:-1;;;9221:58:8;;21845:2:25;9221:58:8;;;21827:21:25;21884:2;21864:18;;;21857:30;21923;21903:18;;;21896:58;21971:18;;9221:58:8;21643:352:25;9221:58:8;9290:45;9319:1;9323:2;9327:7;9290:20;:45::i;:::-;-1:-1:-1;;;;;9346:13:8;;;;;;:9;:13;;;;;:18;;9363:1;;9346:13;:18;;9363:1;;9346:18;:::i;:::-;;;;-1:-1:-1;;9374:16:8;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9374:21:8;-1:-1:-1;;;;;9374:21:8;;;;;;;;9411:33;;9374:16;;;9411:33;;9374:16;;9411:33;9999:143:20;9896:252;:::o;7443:344:8:-;7536:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:8;7552:73;;;;-1:-1:-1;;;7552:73:8;;22202:2:25;7552:73:8;;;22184:21:25;22241:2;22221:18;;;22214:30;22280:34;22260:18;;;22253:62;-1:-1:-1;;;22331:18:25;;;22324:42;22383:19;;7552:73:8;22000:408:25;7552:73:8;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:8;:7;-1:-1:-1;;;;;7692:16:8;;:51;;;;7736:7;-1:-1:-1;;;;;7712:31:8;:20;7724:7;7712:11;:20::i;:::-;-1:-1:-1;;;;;7712:31:8;;7692:51;:87;;;-1:-1:-1;;;;;;4623:25:8;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7747:32;7684:96;7443:344;-1:-1:-1;;;;7443:344:8:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:8;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:8;;10572:81;;;;-1:-1:-1;;;10572:81:8;;22615:2:25;10572:81:8;;;22597:21:25;22654:2;22634:18;;;22627:30;22693:34;22673:18;;;22666:62;-1:-1:-1;;;22744:18:25;;;22737:35;22789:19;;10572:81:8;22413:401:25;10572:81:8;-1:-1:-1;;;;;10671:16:8;;10663:65;;;;-1:-1:-1;;;10663:65:8;;23021:2:25;10663:65:8;;;23003:21:25;23060:2;23040:18;;;23033:30;23099:34;23079:18;;;23072:62;-1:-1:-1;;;23150:18:25;;;23143:34;23194:19;;10663:65:8;22819:400:25;10663:65:8;10739:39;10760:4;10766:2;10770:7;10739:20;:39::i;:::-;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:8;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:8;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:8;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:8;-1:-1:-1;;;;;10938:21:8;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;2270:187:7:-;2362:6;;;-1:-1:-1;;;;;2378:17:7;;;-1:-1:-1;;;;;;2378:17:7;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;11475:307:8:-;11625:8;-1:-1:-1;;;;;11616:17:8;:5;-1:-1:-1;;;;;11616:17:8;;;11608:55;;;;-1:-1:-1;;;11608:55:8;;23426:2:25;11608:55:8;;;23408:21:25;23465:2;23445:18;;;23438:30;23504:27;23484:18;;;23477:55;23549:18;;11608:55:8;23224:349:25;11608:55:8;-1:-1:-1;;;;;11673:25:8;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:8;;;;;;;;;;11734:41;;540::25;;;11734::8;;513:18:25;11734:41:8;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:8;;;;;;;:::i;17317:1576:18:-;17456:7;;17515:13;17527:1;17515:9;:13;:::i;:::-;17498:30;;;-1:-1:-1;17558:4:18;17578:11;17574:269;;17628:204;17775:14;;:36;;17803:8;:3;17809:2;17803:8;:::i;:::-;17775:36;;;17792:8;17798:2;17792:3;:8;:::i;:::-;17723:89;;17730:12;;;17723:89;:::i;:::-;17691:3;17661:26;17674:12;;;17661:3;:26;:::i;:::-;17660:34;;;;:::i;:::-;17659:154;;;;:::i;:::-;17628:8;:204::i;:::-;17605:227;;;;;;17574:269;17856:6;17866:1;17856:11;17852:269;;;17906:204;18053:14;;:36;;18081:8;:3;18087:2;18081:8;:::i;18053:36::-;18070:8;18076:2;18070:3;:8;:::i;17852:269::-;18134:6;18144:1;18134:11;18130:315;;;18184:250;18355:14;;:36;;18383:8;:3;18389:2;18383:8;:::i;:::-;18355:36;;;18372:8;18378:2;18372:3;:8;:::i;:::-;18304:15;18315:3;18304:15;;:10;:15::i;:::-;:88;;;;:::i;:::-;18268:3;18249:15;18260:3;18249:15;;:10;:15::i;:::-;18243:21;;:3;:21;:::i;18130:315::-;18474:399;18781:3;18769:9;:15;;;:23;;18791:1;18769:23;;;18787:1;18769:23;18761:32;;18673:14;;:41;;18711:2;18673:41;;;-1:-1:-1;;18673:41:18;18672:122;;;;:::i;:::-;18633:162;;:3;:162;:::i;:::-;:199;;18830:2;18633:199;:::i;18474:399::-;18455:418;17317:1576;-1:-1:-1;;;;;;;17317:1576:18:o;19396:551::-;19539:7;;19619:14;;;19615:207;;19667:12;19675:3;19667:7;:12::i;:::-;19653:26;;;-1:-1:-1;19803:3:18;19751:19;;;19750:29;;19782:17;;;19750:49;19749:57;19724:1;:83;19697:110;;;;;19615:207;-1:-1:-1;19849:3:18;19927;19875:19;;;19874:29;;19906:17;;;19874:49;19873:57;;19396:551;-1:-1:-1;;;;;;19396:551:18:o;18935:418::-;19077:7;;19129:14;;;19125:128;;19173:12;19181:3;19173:7;:12::i;:::-;19159:26;;;;19125:128;;;19230:12;19238:3;19230:7;:12::i;:::-;19216:26;;;;19125:128;19342:3;19320:17;19334:3;19320:11;:17;:::i;:::-;19311:5;19288:19;19296:11;19288:5;:19;:::i;:::-;19287:29;;;;:::i;:::-;:51;;;;:::i;:::-;19286:59;;;;:::i;:::-;19281:65;;:1;:65;:::i;:::-;19262:84;18935:418;-1:-1:-1;;;;;;18935:418:18:o;19983:387::-;20088:12;20189:19;20206:1;20189:16;:19::i;:::-;20248;20265:1;20248:16;:19::i;:::-;20308;20325:1;20308:16;:19::i;:::-;20131:232;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20112:251;;19983:387;;;;;:::o;12150:183:20:-;-1:-1:-1;;;;;12255:20:20;;;;;;:16;:20;;;;;;;;12251:76;;;12291:18;;;;:9;:18;;;;;:25;;-1:-1:-1;;;;;12291:25:20;;-1:-1:-1;;;;;;12291:25:20;;;;;;12150:183;;;:::o;12335:778:8:-;12485:4;-1:-1:-1;;;;;12505:13:8;;1465:19:12;:23;12501:606:8;;12540:72;;-1:-1:-1;;;12540:72:8;;-1:-1:-1;;;;;12540:36:8;;;;;:72;;719:10:13;;12591:4:8;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:8;;;;;;;;-1:-1:-1;;12540:72:8;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12779:13:8;;12775:266;;12821:60;;-1:-1:-1;;;12821:60:8;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:8;-1:-1:-1;;;12662:51:8;;-1:-1:-1;12655:58:8;;12501:606;-1:-1:-1;13092:4:8;13085:11;;17012:269:18;17111:3;17106:8;;17063:7;17132:6;;;17128:137;;17178:3;17173:1;17165:16;;;17012:269;-1:-1:-1;;17012:269:18:o;17128:137::-;17246:3;17241:1;-1:-1:-1;;17236:6:18;17228:21;;;;;:::i;17128:137::-;17012:269;;;:::o;7284:3377::-;7337:6;7363:2;7359:1;:6;;;7355:45;;;-1:-1:-1;7388:1:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7355:45::-;7417:2;7413:1;:6;;;7409:45;;;-1:-1:-1;7442:1:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7409:45::-;7471:2;7467:1;:6;;;7463:45;;;-1:-1:-1;7496:1:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7463:45::-;7525:2;7521:1;:6;;;7517:45;;;-1:-1:-1;7550:1:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7517:45::-;7579:2;7575:1;:6;;;7571:45;;;-1:-1:-1;7604:1:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7571:45::-;7633:2;7629:1;:6;;;7625:45;;;-1:-1:-1;7658:1:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7625:45::-;7687:2;7683:1;:6;;;7679:45;;;-1:-1:-1;7712:1:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7679:45::-;7741:2;7737:1;:6;;;7733:45;;;-1:-1:-1;7766:1:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7733:45::-;7795:2;7791:1;:6;;;7787:45;;;-1:-1:-1;7820:1:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7787:45::-;7849:2;7845:1;:6;;;7841:45;;;-1:-1:-1;7874:1:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7841:45::-;7903:2;7899:1;:6;;;7895:46;;;-1:-1:-1;7928:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7895:46::-;7958:2;7954:1;:6;;;7950:46;;;-1:-1:-1;7983:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;7950:46::-;8013:2;8009:1;:6;;;8005:46;;;-1:-1:-1;8038:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8005:46::-;8068:2;8064:1;:6;;;8060:46;;;-1:-1:-1;8093:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8060:46::-;8123:2;8119:1;:6;;;8115:46;;;-1:-1:-1;8148:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8115:46::-;8178:2;8174:1;:6;;;8170:46;;;-1:-1:-1;8203:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8170:46::-;8233:2;8229:1;:6;;;8225:46;;;-1:-1:-1;8258:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8225:46::-;8288:2;8284:1;:6;;;8280:46;;;-1:-1:-1;8313:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8280:46::-;8343:2;8339:1;:6;;;8335:46;;;-1:-1:-1;8368:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8335:46::-;8398:2;8394:1;:6;;;8390:46;;;-1:-1:-1;8423:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8390:46::-;8453:2;8449:1;:6;;;8445:46;;;-1:-1:-1;8478:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8445:46::-;8508:2;8504:1;:6;;;8500:46;;;-1:-1:-1;8533:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8500:46::-;8563:2;8559:1;:6;;;8555:46;;;-1:-1:-1;8588:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8555:46::-;8618:2;8614:1;:6;;;8610:46;;;-1:-1:-1;8643:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8610:46::-;8673:2;8669:1;:6;;;8665:46;;;-1:-1:-1;8698:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8665:46::-;8728:2;8724:1;:6;;;8720:46;;;-1:-1:-1;8753:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8720:46::-;8783:2;8779:1;:6;;;8775:46;;;-1:-1:-1;8808:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8775:46::-;8838:2;8834:1;:6;;;8830:46;;;-1:-1:-1;8863:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8830:46::-;8893:2;8889:1;:6;;;8885:46;;;-1:-1:-1;8918:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8885:46::-;8948:2;8944:1;:6;;;8940:46;;;-1:-1:-1;8973:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8940:46::-;9003:2;8999:1;:6;;;8995:46;;;-1:-1:-1;9028:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;8995:46::-;9058:2;9054:1;:6;;;9050:46;;;-1:-1:-1;9083:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9050:46::-;9113:2;9109:1;:6;;;9105:46;;;-1:-1:-1;9138:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9105:46::-;9168:2;9164:1;:6;;;9160:46;;;-1:-1:-1;9193:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9160:46::-;9223:2;9219:1;:6;;;9215:46;;;-1:-1:-1;9248:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9215:46::-;9278:2;9274:1;:6;;;9270:46;;;-1:-1:-1;9303:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9270:46::-;9333:2;9329:1;:6;;;9325:46;;;-1:-1:-1;9358:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9325:46::-;9388:2;9384:1;:6;;;9380:46;;;-1:-1:-1;9413:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9380:46::-;9443:2;9439:1;:6;;;9435:46;;;-1:-1:-1;9468:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9435:46::-;9498:2;9494:1;:6;;;9490:46;;;-1:-1:-1;9523:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9490:46::-;9553:2;9549:1;:6;;;9545:46;;;-1:-1:-1;9578:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9545:46::-;9608:2;9604:1;:6;;;9600:46;;;-1:-1:-1;9633:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9600:46::-;9663:2;9659:1;:6;;;9655:46;;;-1:-1:-1;9688:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9655:46::-;9718:2;9714:1;:6;;;9710:46;;;-1:-1:-1;9743:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9710:46::-;9773:2;9769:1;:6;;;9765:46;;;-1:-1:-1;9798:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9765:46::-;9828:2;9824:1;:6;;;9820:46;;;-1:-1:-1;9853:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9820:46::-;9883:2;9879:1;:6;;;9875:46;;;-1:-1:-1;9908:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9875:46::-;9938:2;9934:1;:6;;;9930:46;;;-1:-1:-1;9963:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9930:46::-;9993:2;9989:1;:6;;;9985:46;;;-1:-1:-1;10018:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;9985:46::-;10048:2;10044:1;:6;;;10040:46;;;-1:-1:-1;10073:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10040:46::-;10103:2;10099:1;:6;;;10095:46;;;-1:-1:-1;10128:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10095:46::-;10158:2;10154:1;:6;;;10150:46;;;-1:-1:-1;10183:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10150:46::-;10213:2;10209:1;:6;;;10205:46;;;-1:-1:-1;10238:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10205:46::-;10268:2;10264:1;:6;;;10260:46;;;-1:-1:-1;10293:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10260:46::-;10323:2;10319:1;:6;;;10315:46;;;-1:-1:-1;10348:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10315:46::-;10378:2;10374:1;:6;;;10370:46;;;-1:-1:-1;10403:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10370:46::-;10433:2;10429:1;:6;;;10425:46;;;-1:-1:-1;10458:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10425:46::-;10488:2;10484:1;:6;;;10480:46;;;-1:-1:-1;10513:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10480:46::-;10543:2;10539:1;:6;;;10535:46;;;-1:-1:-1;10568:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10535:46::-;10598:2;10594:1;:6;;;10590:46;;;-1:-1:-1;10623:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;10590:46::-;-1:-1:-1;10652:2:18;;7284:3377;-1:-1:-1;7284:3377:18:o;14135:2819::-;14186:5;14211:2;14207:1;:6;14203:45;;;-1:-1:-1;14236:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14203:45::-;14265:2;14261:1;:6;14257:45;;;-1:-1:-1;14290:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14257:45::-;14319:2;14315:1;:6;14311:45;;;-1:-1:-1;14344:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14311:45::-;14373:2;14369:1;:6;14365:45;;;-1:-1:-1;14398:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14365:45::-;14427:2;14423:1;:6;14419:45;;;-1:-1:-1;14452:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14419:45::-;14481:2;14477:1;:6;14473:45;;;-1:-1:-1;14506:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14473:45::-;14535:2;14531:1;:6;14527:45;;;-1:-1:-1;14560:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14527:45::-;14589:2;14585:1;:6;14581:45;;;-1:-1:-1;14614:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14581:45::-;14643:2;14639:1;:6;14635:45;;;-1:-1:-1;14668:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14635:45::-;14697:2;14693:1;:6;14689:45;;;-1:-1:-1;14722:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14689:45::-;14751:2;14747:1;:6;14743:45;;;-1:-1:-1;14776:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14743:45::-;14805:2;14801:1;:6;14797:45;;;-1:-1:-1;14830:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14797:45::-;14859:2;14855:1;:6;14851:45;;;-1:-1:-1;14884:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14851:45::-;14913:2;14909:1;:6;14905:45;;;-1:-1:-1;14938:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14905:45::-;14967:2;14963:1;:6;14959:45;;;-1:-1:-1;14992:1:18;;14135:2819;-1:-1:-1;14135:2819:18:o;14959:45::-;15021:2;15017:1;:6;15013:46;;;-1:-1:-1;15046:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15013:46::-;15076:2;15072:1;:6;15068:46;;;-1:-1:-1;15101:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15068:46::-;15131:2;15127:1;:6;15123:46;;;-1:-1:-1;15156:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15123:46::-;15186:2;15182:1;:6;15178:46;;;-1:-1:-1;15211:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15178:46::-;15241:2;15237:1;:6;15233:46;;;-1:-1:-1;15266:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15233:46::-;15296:2;15292:1;:6;15288:46;;;-1:-1:-1;15321:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15288:46::-;15351:2;15347:1;:6;15343:46;;;-1:-1:-1;15376:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15343:46::-;15406:2;15402:1;:6;15398:46;;;-1:-1:-1;15431:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15398:46::-;15461:2;15457:1;:6;15453:46;;;-1:-1:-1;15486:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15453:46::-;15516:2;15512:1;:6;15508:46;;;-1:-1:-1;15541:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15508:46::-;15571:2;15567:1;:6;15563:46;;;-1:-1:-1;15596:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15563:46::-;15626:2;15622:1;:6;15618:46;;;-1:-1:-1;15651:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15618:46::-;15681:2;15677:1;:6;15673:46;;;-1:-1:-1;15706:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15673:46::-;15736:2;15732:1;:6;15728:46;;;-1:-1:-1;15761:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15728:46::-;15791:2;15787:1;:6;15783:46;;;-1:-1:-1;15816:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15783:46::-;15846:2;15842:1;:6;15838:46;;;-1:-1:-1;15871:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15838:46::-;15901:2;15897:1;:6;15893:46;;;-1:-1:-1;15926:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15893:46::-;15956:2;15952:1;:6;15948:46;;;-1:-1:-1;15981:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;15948:46::-;16011:2;16007:1;:6;16003:46;;;-1:-1:-1;16036:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16003:46::-;16066:2;16062:1;:6;16058:46;;;-1:-1:-1;16091:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16058:46::-;16121:2;16117:1;:6;16113:46;;;-1:-1:-1;16146:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16113:46::-;16176:2;16172:1;:6;16168:46;;;-1:-1:-1;16201:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16168:46::-;16231:2;16227:1;:6;16223:46;;;-1:-1:-1;16256:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16223:46::-;16286:2;16282:1;:6;16278:46;;;-1:-1:-1;16311:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16278:46::-;16341:2;16337:1;:6;16333:46;;;-1:-1:-1;16366:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16333:46::-;16396:2;16392:1;:6;16388:46;;;-1:-1:-1;16421:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16388:46::-;16451:2;16447:1;:6;16443:46;;;-1:-1:-1;16476:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16443:46::-;16506:2;16502:1;:6;16498:46;;;-1:-1:-1;16531:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16498:46::-;16561:2;16557:1;:6;16553:46;;;-1:-1:-1;16586:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16553:46::-;16616:2;16612:1;:6;16608:46;;;-1:-1:-1;16641:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16608:46::-;16671:2;16667:1;:6;16663:46;;;-1:-1:-1;16696:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16663:46::-;16726:2;16722:1;:6;16718:46;;;-1:-1:-1;16751:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16718:46::-;16781:2;16777:1;:6;16773:46;;;-1:-1:-1;16806:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16773:46::-;16836:2;16832:1;:6;16828:46;;;-1:-1:-1;16861:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16828:46::-;16891:2;16887:1;:6;16883:46;;;-1:-1:-1;16916:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;16883:46::-;-1:-1:-1;16945:2:18;;14135:2819;-1:-1:-1;14135:2819:18:o;10711:3374::-;10762:5;10787:2;10783:1;:6;10779:45;;;-1:-1:-1;10812:1:18;;10711:3374;-1:-1:-1;10711:3374:18:o;10779:45::-;10841:2;10837:1;:6;10833:45;;;-1:-1:-1;10866:1:18;;10711:3374;-1:-1:-1;10711:3374:18:o;10833:45::-;10895:2;10891:1;:6;10887:45;;;-1:-1:-1;10920:1:18;;10711:3374;-1:-1:-1;10711:3374:18:o;10887:45::-;10949:2;10945:1;:6;10941:45;;;-1:-1:-1;10974:1:18;;10711:3374;-1:-1:-1;10711:3374:18:o;10941:45::-;11003:2;10999:1;:6;10995:45;;;-1:-1:-1;11028:1:18;;10711:3374;-1:-1:-1;10711:3374:18:o;10995:45::-;11057:2;11053:1;:6;11049:45;;;-1:-1:-1;11082:1:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11049:45::-;11111:2;11107:1;:6;11103:45;;;-1:-1:-1;11136:1:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11103:45::-;11165:2;11161:1;:6;11157:45;;;-1:-1:-1;11190:1:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11157:45::-;11219:2;11215:1;:6;11211:45;;;-1:-1:-1;11244:1:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11211:45::-;11273:2;11269:1;:6;11265:45;;;-1:-1:-1;11298:1:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11265:45::-;11327:2;11323:1;:6;11319:46;;;-1:-1:-1;11352:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11319:46::-;11382:2;11378:1;:6;11374:46;;;-1:-1:-1;11407:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11374:46::-;11437:2;11433:1;:6;11429:46;;;-1:-1:-1;11462:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11429:46::-;11492:2;11488:1;:6;11484:46;;;-1:-1:-1;11517:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11484:46::-;11547:2;11543:1;:6;11539:46;;;-1:-1:-1;11572:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11539:46::-;11602:2;11598:1;:6;11594:46;;;-1:-1:-1;11627:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11594:46::-;11657:2;11653:1;:6;11649:46;;;-1:-1:-1;11682:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11649:46::-;11712:2;11708:1;:6;11704:46;;;-1:-1:-1;11737:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11704:46::-;11767:2;11763:1;:6;11759:46;;;-1:-1:-1;11792:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11759:46::-;11822:2;11818:1;:6;11814:46;;;-1:-1:-1;11847:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11814:46::-;11877:2;11873:1;:6;11869:46;;;-1:-1:-1;11902:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11869:46::-;11932:2;11928:1;:6;11924:46;;;-1:-1:-1;11957:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11924:46::-;11987:2;11983:1;:6;11979:46;;;-1:-1:-1;12012:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;11979:46::-;12042:2;12038:1;:6;12034:46;;;-1:-1:-1;12067:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12034:46::-;12097:2;12093:1;:6;12089:46;;;-1:-1:-1;12122:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12089:46::-;12152:2;12148:1;:6;12144:46;;;-1:-1:-1;12177:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12144:46::-;12207:2;12203:1;:6;12199:46;;;-1:-1:-1;12232:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12199:46::-;12262:2;12258:1;:6;12254:46;;;-1:-1:-1;12287:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12254:46::-;12317:2;12313:1;:6;12309:46;;;-1:-1:-1;12342:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12309:46::-;12372:2;12368:1;:6;12364:46;;;-1:-1:-1;12397:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12364:46::-;12427:2;12423:1;:6;12419:46;;;-1:-1:-1;12452:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12419:46::-;12482:2;12478:1;:6;12474:46;;;-1:-1:-1;12507:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12474:46::-;12537:2;12533:1;:6;12529:46;;;-1:-1:-1;12562:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12529:46::-;12592:2;12588:1;:6;12584:46;;;-1:-1:-1;12617:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12584:46::-;12647:2;12643:1;:6;12639:46;;;-1:-1:-1;12672:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12639:46::-;12702:2;12698:1;:6;12694:46;;;-1:-1:-1;12727:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12694:46::-;12757:2;12753:1;:6;12749:46;;;-1:-1:-1;12782:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12749:46::-;12812:2;12808:1;:6;12804:46;;;-1:-1:-1;12837:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12804:46::-;12867:2;12863:1;:6;12859:46;;;-1:-1:-1;12892:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12859:46::-;12922:2;12918:1;:6;12914:46;;;-1:-1:-1;12947:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12914:46::-;12977:2;12973:1;:6;12969:46;;;-1:-1:-1;13002:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;12969:46::-;13032:2;13028:1;:6;13024:46;;;-1:-1:-1;13057:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13024:46::-;13087:2;13083:1;:6;13079:46;;;-1:-1:-1;13112:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13079:46::-;13142:2;13138:1;:6;13134:46;;;-1:-1:-1;13167:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13134:46::-;13197:2;13193:1;:6;13189:46;;;-1:-1:-1;13222:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13189:46::-;13252:2;13248:1;:6;13244:46;;;-1:-1:-1;13277:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13244:46::-;13307:2;13303:1;:6;13299:46;;;-1:-1:-1;13332:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13299:46::-;13362:2;13358:1;:6;13354:46;;;-1:-1:-1;13387:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13354:46::-;13417:2;13413:1;:6;13409:46;;;-1:-1:-1;13442:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13409:46::-;13472:2;13468:1;:6;13464:46;;;-1:-1:-1;13497:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13464:46::-;13527:2;13523:1;:6;13519:46;;;-1:-1:-1;13552:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13519:46::-;13582:2;13578:1;:6;13574:46;;;-1:-1:-1;13607:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13574:46::-;13637:2;13633:1;:6;13629:46;;;-1:-1:-1;13662:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13629:46::-;13692:2;13688:1;:6;13684:46;;;-1:-1:-1;13717:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13684:46::-;13747:2;13743:1;:6;13739:46;;;-1:-1:-1;13772:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13739:46::-;13802:2;13798:1;:6;13794:46;;;-1:-1:-1;13827:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13794:46::-;13857:2;13853:1;:6;13849:46;;;-1:-1:-1;13882:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13849:46::-;13912:2;13908:1;:6;13904:46;;;-1:-1:-1;13937:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13904:46::-;13967:2;13963:1;:6;13959:46;;;-1:-1:-1;13992:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;13959:46::-;14022:2;14018:1;:6;14014:46;;;-1:-1:-1;14047:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;14014:46::-;-1:-1:-1;14076:2:18;;10711:3374;-1:-1:-1;10711:3374:18:o;328:703:15:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:15;;;;;;;;;;;;-1:-1:-1;;;627:10:15;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:15;;-1:-1:-1;773:2:15;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:15;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:15;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:15;;;;;;;;-1:-1:-1;972:11:15;981:2;972:11;;:::i;:::-;;;844:150;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:25:-;-1:-1:-1;;;;;;88:32:25;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:131::-;-1:-1:-1;;;;;667:31:25;;657:42;;647:70;;713:1;710;703:12;728:247;787:6;840:2;828:9;819:7;815:23;811:32;808:52;;;856:1;853;846:12;808:52;895:9;882:23;914:31;939:5;914:31;:::i;980:258::-;1052:1;1062:113;1076:6;1073:1;1070:13;1062:113;;;1152:11;;;1146:18;1133:11;;;1126:39;1098:2;1091:10;1062:113;;;1193:6;1190:1;1187:13;1184:48;;;-1:-1:-1;;1228:1:25;1210:16;;1203:27;980:258::o;1243:257::-;1284:3;1322:5;1316:12;1349:6;1344:3;1337:19;1365:63;1421:6;1414:4;1409:3;1405:14;1398:4;1391:5;1387:16;1365:63;:::i;:::-;1482:2;1461:15;-1:-1:-1;;1457:29:25;1448:39;;;;1489:4;1444:50;;1243:257;-1:-1:-1;;1243:257:25:o;1505:686::-;1690:2;1742:21;;;1661:4;;1849:3;1834:19;;1715:18;;;1876:6;1661:4;1910:252;1924:4;1921:1;1918:11;1910:252;;;2015:2;2011:7;1999:9;1991:6;1987:22;1983:36;1978:3;1971:49;2043:39;2075:6;2066;2060:13;2043:39;:::i;:::-;2033:49;-1:-1:-1;2140:12:25;;;;2105:15;;;;1944:1;1937:9;1910:252;;;-1:-1:-1;2179:6:25;;1505:686;-1:-1:-1;;;;;;1505:686:25:o;2196:219::-;2345:2;2334:9;2327:21;2308:4;2365:44;2405:2;2394:9;2390:18;2382:6;2365:44;:::i;2420:180::-;2479:6;2532:2;2520:9;2511:7;2507:23;2503:32;2500:52;;;2548:1;2545;2538:12;2500:52;-1:-1:-1;2571:23:25;;2420:180;-1:-1:-1;2420:180:25:o;2813:315::-;2881:6;2889;2942:2;2930:9;2921:7;2917:23;2913:32;2910:52;;;2958:1;2955;2948:12;2910:52;2997:9;2984:23;3016:31;3041:5;3016:31;:::i;:::-;3066:5;3118:2;3103:18;;;;3090:32;;-1:-1:-1;;;2813:315:25:o;3315:456::-;3392:6;3400;3408;3461:2;3449:9;3440:7;3436:23;3432:32;3429:52;;;3477:1;3474;3467:12;3429:52;3516:9;3503:23;3535:31;3560:5;3535:31;:::i;:::-;3585:5;-1:-1:-1;3642:2:25;3627:18;;3614:32;3655:33;3614:32;3655:33;:::i;:::-;3315:456;;3707:7;;-1:-1:-1;;;3761:2:25;3746:18;;;;3733:32;;3315:456::o;3776:160::-;3841:20;;3897:13;;3890:21;3880:32;;3870:60;;3926:1;3923;3916:12;3941:689;4033:6;4041;4049;4102:2;4090:9;4081:7;4077:23;4073:32;4070:52;;;4118:1;4115;4108:12;4070:52;4158:9;4145:23;4187:18;4228:2;4220:6;4217:14;4214:34;;;4244:1;4241;4234:12;4214:34;4282:6;4271:9;4267:22;4257:32;;4327:7;4320:4;4316:2;4312:13;4308:27;4298:55;;4349:1;4346;4339:12;4298:55;4389:2;4376:16;4415:2;4407:6;4404:14;4401:34;;;4431:1;4428;4421:12;4401:34;4486:7;4479:4;4469:6;4466:1;4462:14;4458:2;4454:23;4450:34;4447:47;4444:67;;;4507:1;4504;4497:12;4444:67;4538:4;4530:13;;;;-1:-1:-1;4562:6:25;-1:-1:-1;4587:37:25;;4603:20;;;-1:-1:-1;4587:37:25;:::i;:::-;4577:47;;3941:689;;;;;:::o;4635:127::-;4696:10;4691:3;4687:20;4684:1;4677:31;4727:4;4724:1;4717:15;4751:4;4748:1;4741:15;4767:275;4838:2;4832:9;4903:2;4884:13;;-1:-1:-1;;4880:27:25;4868:40;;4938:18;4923:34;;4959:22;;;4920:62;4917:88;;;4985:18;;:::i;:::-;5021:2;5014:22;4767:275;;-1:-1:-1;4767:275:25:o;5047:1021::-;5131:6;5162:2;5205;5193:9;5184:7;5180:23;5176:32;5173:52;;;5221:1;5218;5211:12;5173:52;5261:9;5248:23;5290:18;5331:2;5323:6;5320:14;5317:34;;;5347:1;5344;5337:12;5317:34;5385:6;5374:9;5370:22;5360:32;;5430:7;5423:4;5419:2;5415:13;5411:27;5401:55;;5452:1;5449;5442:12;5401:55;5488:2;5475:16;5510:2;5506;5503:10;5500:36;;;5516:18;;:::i;:::-;5562:2;5559:1;5555:10;5545:20;;5585:28;5609:2;5605;5601:11;5585:28;:::i;:::-;5647:15;;;5717:11;;;5713:20;;;5678:12;;;;5745:19;;;5742:39;;;5777:1;5774;5767:12;5742:39;5801:11;;;;5821:217;5837:6;5832:3;5829:15;5821:217;;;5917:3;5904:17;5891:30;;5934:31;5959:5;5934:31;:::i;:::-;5978:18;;;5854:12;;;;6016;;;;5821:217;;;6057:5;5047:1021;-1:-1:-1;;;;;;;;5047:1021:25:o;6073:315::-;6138:6;6146;6199:2;6187:9;6178:7;6174:23;6170:32;6167:52;;;6215:1;6212;6205:12;6167:52;6254:9;6241:23;6273:31;6298:5;6273:31;:::i;:::-;6323:5;-1:-1:-1;6347:35:25;6378:2;6363:18;;6347:35;:::i;:::-;6337:45;;6073:315;;;;;:::o;6393:186::-;6441:4;6474:18;6466:6;6463:30;6460:56;;;6496:18;;:::i;:::-;-1:-1:-1;6562:2:25;6541:15;-1:-1:-1;;6537:29:25;6568:4;6533:40;;6393:186::o;6584:1016::-;6679:6;6687;6695;6703;6756:3;6744:9;6735:7;6731:23;6727:33;6724:53;;;6773:1;6770;6763:12;6724:53;6812:9;6799:23;6831:31;6856:5;6831:31;:::i;:::-;6881:5;-1:-1:-1;6938:2:25;6923:18;;6910:32;6951:33;6910:32;6951:33;:::i;:::-;7003:7;-1:-1:-1;7057:2:25;7042:18;;7029:32;;-1:-1:-1;7112:2:25;7097:18;;7084:32;7139:18;7128:30;;7125:50;;;7171:1;7168;7161:12;7125:50;7194:22;;7247:4;7239:13;;7235:27;-1:-1:-1;7225:55:25;;7276:1;7273;7266:12;7225:55;7312:2;7299:16;7337:48;7353:31;7381:2;7353:31;:::i;:::-;7337:48;:::i;:::-;7408:2;7401:5;7394:17;7448:7;7443:2;7438;7434;7430:11;7426:20;7423:33;7420:53;;;7469:1;7466;7459:12;7420:53;7524:2;7519;7515;7511:11;7506:2;7499:5;7495:14;7482:45;7568:1;7563:2;7558;7551:5;7547:14;7543:23;7536:34;7589:5;7579:15;;;;;6584:1016;;;;;;;:::o;7605:388::-;7673:6;7681;7734:2;7722:9;7713:7;7709:23;7705:32;7702:52;;;7750:1;7747;7740:12;7702:52;7789:9;7776:23;7808:31;7833:5;7808:31;:::i;:::-;7858:5;-1:-1:-1;7915:2:25;7900:18;;7887:32;7928:33;7887:32;7928:33;:::i;:::-;7980:7;7970:17;;;7605:388;;;;;:::o;7998:380::-;8077:1;8073:12;;;;8120;;;8141:61;;8195:4;8187:6;8183:17;8173:27;;8141:61;8248:2;8240:6;8237:14;8217:18;8214:38;8211:161;;;8294:10;8289:3;8285:20;8282:1;8275:31;8329:4;8326:1;8319:15;8357:4;8354:1;8347:15;8211:161;;7998:380;;;:::o;9965:127::-;10026:10;10021:3;10017:20;10014:1;10007:31;10057:4;10054:1;10047:15;10081:4;10078:1;10071:15;10097:125;10137:4;10165:1;10162;10159:8;10156:34;;;10170:18;;:::i;:::-;-1:-1:-1;10207:9:25;;10097:125::o;10227:413::-;10429:2;10411:21;;;10468:2;10448:18;;;10441:30;10507:34;10502:2;10487:18;;10480:62;-1:-1:-1;;;10573:2:25;10558:18;;10551:47;10630:3;10615:19;;10227:413::o;11055:356::-;11257:2;11239:21;;;11276:18;;;11269:30;11335:34;11330:2;11315:18;;11308:62;11402:2;11387:18;;11055:356::o;11416:127::-;11477:10;11472:3;11468:20;11465:1;11458:31;11508:4;11505:1;11498:15;11532:4;11529:1;11522:15;11548:135;11587:3;-1:-1:-1;;11608:17:25;;11605:43;;;11628:18;;:::i;:::-;-1:-1:-1;11675:1:25;11664:13;;11548:135::o;12099:251::-;12169:6;12222:2;12210:9;12201:7;12197:23;12193:32;12190:52;;;12238:1;12235;12228:12;12190:52;12270:9;12264:16;12289:31;12314:5;12289:31;:::i;12355:128::-;12395:3;12426:1;12422:6;12419:1;12416:13;12413:39;;;12432:18;;:::i;:::-;-1:-1:-1;12468:9:25;;12355:128::o;12824:635::-;12904:6;12957:2;12945:9;12936:7;12932:23;12928:32;12925:52;;;12973:1;12970;12963:12;12925:52;13006:9;13000:16;13039:18;13031:6;13028:30;13025:50;;;13071:1;13068;13061:12;13025:50;13094:22;;13147:4;13139:13;;13135:27;-1:-1:-1;13125:55:25;;13176:1;13173;13166:12;13125:55;13205:2;13199:9;13230:48;13246:31;13274:2;13246:31;:::i;13230:48::-;13301:2;13294:5;13287:17;13341:7;13336:2;13331;13327;13323:11;13319:20;13316:33;13313:53;;;13362:1;13359;13352:12;13313:53;13375:54;13426:2;13421;13414:5;13410:14;13405:2;13401;13397:11;13375:54;:::i;:::-;13448:5;12824:635;-1:-1:-1;;;;;12824:635:25:o;13464:185::-;13506:3;13544:5;13538:12;13559:52;13604:6;13599:3;13592:4;13585:5;13581:16;13559:52;:::i;:::-;13627:16;;;;;13464:185;-1:-1:-1;;13464:185:25:o;14083:1813::-;-1:-1:-1;;;14881:57:25;;14961:13;;14863:3;;14983:62;14961:13;15033:2;15024:12;;15017:4;15005:17;;14983:62;:::i;:::-;15109:66;15104:2;15064:16;;;15096:11;;;15089:87;15205:34;15200:2;15192:11;;15185:55;15269:66;15264:2;15256:11;;15249:87;15366:34;15360:3;15352:12;;15345:56;15431:34;15425:3;15417:12;;15410:56;15496:36;15490:3;15482:12;;15475:58;15563:25;15557:3;15549:12;;15542:47;15614:13;;15636:64;15614:13;15685:3;15677:12;;15670:4;15658:17;;15636:64;:::i;:::-;15716:174;15746:143;15772:116;15802:85;15828:58;15881:3;15870:8;15866:2;15862:17;15858:27;13731:25;13719:38;;13782:2;13773:12;;13654:137;15828:58;15820:6;15802:85;:::i;:::-;-1:-1:-1;;;13861:53:25;;13939:2;13930:12;;13796:152;15772:116;15764:6;15746:143;:::i;:::-;-1:-1:-1;;;14018:27:25;;14070:1;14061:11;;13953:125;18197:2091;19146:66;19141:3;19134:79;19243:66;19238:2;19233:3;19229:12;19222:88;19340:66;19335:2;19330:3;19326:12;19319:88;19437:66;19432:2;19427:3;19423:12;19416:88;19535:66;19529:3;19524;19520:13;19513:89;19633:66;19627:3;19622;19618:13;19611:89;19731:66;19725:3;19720;19716:13;19709:89;19838:36;19833:3;19829:46;19823:3;19818;19814:13;19807:69;19116:3;19905:6;19899:13;19921:61;19975:6;19969:3;19964;19960:13;19955:2;19947:6;19943:15;19921:61;:::i;:::-;19998:284;20028:253;20054:226;20084:195;20110:168;20135:142;20161:115;20191:84;20217:57;20269:3;20260:6;20255:3;20251:16;20247:26;16200:66;16188:79;;-1:-1:-1;;;16292:2:25;16283:12;;16276:46;16347:2;16338:12;;16123:233;20217:57;20209:6;20191:84;:::i;:::-;16438:66;16426:79;;-1:-1:-1;;;16530:2:25;16521:12;;16514:46;16585:2;16576:12;;16361:233;20161:115;20153:6;20135:142;:::i;:::-;16671:66;16659:79;;-1:-1:-1;;;16763:2:25;16754:12;;16747:46;16818:2;16809:12;;16599:228;20110:168;20102:6;20084:195;:::i;:::-;16909:66;16897:79;;-1:-1:-1;;;17001:2:25;16992:12;;16985:42;17052:2;17043:12;;16832:229;20054:226;20046:6;20028:253;:::i;:::-;17143:66;17131:79;;17240:66;17235:2;17226:12;;17219:88;17337:66;17332:2;17323:12;;17316:88;17434:34;17429:2;17420:12;;17413:56;17500:34;17494:3;17485:13;;17478:57;17566:66;17560:3;17551:13;;17544:89;17664:66;17658:3;17649:13;;17642:89;17762:66;17756:3;17747:13;;17740:89;17860:66;17854:3;17845:13;;17838:89;17958:34;17952:3;17943:13;;17936:57;18024:34;18018:3;18009:13;;18002:57;18090:66;18084:3;18075:13;;18068:89;18182:3;18173:13;;17066:1126;20293:445;20555:28;20550:3;20543:41;20525:3;20613:6;20607:13;20629:62;20684:6;20679:2;20674:3;20670:12;20663:4;20655:6;20651:17;20629:62;:::i;:::-;20711:16;;;;20729:2;20707:25;;20293:445;-1:-1:-1;;20293:445:25:o;21150:127::-;21211:10;21206:3;21202:20;21199:1;21192:31;21242:4;21239:1;21232:15;21266:4;21263:1;21256:15;23578:414;23780:2;23762:21;;;23819:2;23799:18;;;23792:30;23858:34;23853:2;23838:18;;23831:62;-1:-1:-1;;;23924:2:25;23909:18;;23902:48;23982:3;23967:19;;23578:414::o;23997:157::-;24027:1;24061:4;24058:1;24054:12;24085:3;24075:37;;24092:18;;:::i;:::-;24144:3;24137:4;24134:1;24130:12;24126:22;24121:27;;;23997:157;;;;:::o;24159:265::-;24198:3;24226:9;;;24251:10;;-1:-1:-1;;;;;24270:27:25;;;24263:35;;24247:52;24244:78;;;24302:18;;:::i;:::-;-1:-1:-1;;;24349:19:25;;;24342:27;;24334:36;;24331:62;;;24373:18;;:::i;:::-;-1:-1:-1;;24409:9:25;;24159:265::o;24429:267::-;24468:4;24497:9;;;24522:10;;-1:-1:-1;;;24541:19:25;;24534:27;;24518:44;24515:70;;;24565:18;;:::i;:::-;-1:-1:-1;;;;;24612:27:25;;24605:35;;24597:44;;24594:70;;;24644:18;;:::i;:::-;-1:-1:-1;;24681:9:25;;24429:267::o;24701:553::-;24740:7;-1:-1:-1;;;;;24810:9:25;;;24838;;;24863:11;;;24882:10;;;24876:17;;24859:35;24856:61;;;24897:18;;:::i;:::-;-1:-1:-1;;;24973:1:25;24966:9;;24991:11;;;25011;;;25004:19;;24987:37;24984:63;;;25027:18;;:::i;:::-;25073:1;25070;25066:9;25056:19;;25120:1;25116:2;25111:11;25108:1;25104:19;25099:2;25095;25091:11;25087:37;25084:63;;;25127:18;;:::i;:::-;25192:1;25188:2;25183:11;25180:1;25176:19;25171:2;25167;25163:11;25159:37;25156:63;;;25199:18;;:::i;:::-;-1:-1:-1;;;25239:9:25;;;;;24701:553;-1:-1:-1;;;24701:553:25:o;25259:168::-;25299:7;25365:1;25361;25357:6;25353:14;25350:1;25347:21;25342:1;25335:9;25328:17;25324:45;25321:71;;;25372:18;;:::i;:::-;-1:-1:-1;25412:9:25;;25259:168::o;25432:120::-;25472:1;25498;25488:35;;25503:18;;:::i;:::-;-1:-1:-1;25537:9:25;;25432:120::o;25557:1232::-;-1:-1:-1;;;26213:3:25;26206:19;26188:3;26254:6;26248:13;26270:61;26324:6;26320:1;26315:3;26311:11;26304:4;26296:6;26292:17;26270:61;:::i;:::-;-1:-1:-1;;;26390:1:25;26350:16;;;26382:10;;;26375:24;26424:13;;26446:62;26424:13;26495:1;26487:10;;26480:4;26468:17;;26446:62;:::i;:::-;-1:-1:-1;;;26568:1:25;26527:17;;;;26560:10;;;26553:25;26603:13;;26625:62;26603:13;26674:1;26666:10;;26659:4;26647:17;;26625:62;:::i;:::-;-1:-1:-1;;;26747:1:25;26706:17;;;;26739:10;;;26732:24;26780:2;26772:11;;25557:1232;-1:-1:-1;;;;;25557:1232:25:o;26794:488::-;-1:-1:-1;;;;;27063:15:25;;;27045:34;;27115:15;;27110:2;27095:18;;27088:43;27162:2;27147:18;;27140:34;;;27210:3;27205:2;27190:18;;27183:31;;;26988:4;;27231:45;;27256:19;;27248:6;27231:45;:::i;27287:249::-;27356:6;27409:2;27397:9;27388:7;27384:23;27380:32;27377:52;;;27425:1;27422;27415:12;27377:52;27457:9;27451:16;27476:30;27500:5;27476:30;:::i;27541:112::-;27573:1;27599;27589:35;;27604:18;;:::i;:::-;-1:-1:-1;27638:9:25;;27541:112::o",
    "linkReferences": {},
    "immutableReferences": {
      "26998": [
        {
          "start": 2792,
          "length": 32
        },
        {
          "start": 2915,
          "length": 32
        },
        {
          "start": 3160,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "airdrop(address[])": "729ad39e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "getZorbRenderAddress(uint256)": "91557ac4",
    "gradientForAddress(address)": "03ff85ff",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint()": "1249c58b",
    "mintIsOpen()": "aa1152ab",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setKnownMarketplaces(address[],bool)": "6411fb45",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "zorbForAddress(address)": "de909942"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPublicSharedMetadata\",\"name\":\"_sharedMetadata\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getZorbRenderAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"gradientForAddress\",\"outputs\":[{\"internalType\":\"bytes[5]\",\"name\":\"\",\"type\":\"bytes[5]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintIsOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"marketPlaces\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isKnown\",\"type\":\"bool\"}],\"name\":\"setKnownMarketplaces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"zorbForAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"airdrop(address[])\":{\"params\":{\"to\":\"list of addresses to airdrop to\"}},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"params\":{\"_sharedMetadata\":\"linked metadata contract\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getZorbRenderAddress(uint256)\":{\"params\":{\"tokenId\":\"id of token to get render address for\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setKnownMarketplaces(address[],bool)\":{\"params\":{\"isKnown\":\"flag if the above marketplaces are known\",\"marketPlaces\":\"list of addresses\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"token id to render\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"zorbForAddress(address)\":{\"params\":{\"user\":\"address to get Zorb SVG for\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"airdrop(address[])\":{\"notice\":\"Public airdrop of tokens to _other_ addresses\"},\"constructor\":{\"notice\":\"Make the Zorb contract\"},\"getZorbRenderAddress(uint256)\":{\"notice\":\"Determines the actual rendering address instead of just owner address for given zorb id\"},\"mint()\":{\"notice\":\"Simple public mint function\"},\"mintIsOpen()\":{\"notice\":\"Informational function returning if the mint is currently ongoing\"},\"setKnownMarketplaces(address[],bool)\":{\"notice\":\"Set known marketplace contracts\"},\"tokenURI(uint256)\":{\"notice\":\"TokenURI function returning on-chain encoded SVG for each Zorb\"},\"totalSupply()\":{\"notice\":\"Number of minted tokens.\"},\"zorbForAddress(address)\":{\"notice\":\"Public getter for getting the given Zorb for an address\"}},\"notice\":\"ZorbNFT Design and Project: tw: lily___digital Solidity: tw: isiain ZORA LABS\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/zorb/packages/zorb-contracts/contracts/ZorbNFT.sol\":\"ZorbNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/zora-drops-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/\",\":ERC721A-Upgradeable/=lib/zora-drops-contracts/lib/ERC721A-Upgradeable/contracts/\",\":base64/=lib/zora-drops-contracts/lib/base64/\",\":ds-test/=lib/zora-drops-contracts/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/zora-drops-contracts/lib/ERC721A-Upgradeable/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/zora-drops-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":zora-drops-contracts/=lib/zora-drops-contracts/src/\",\":zorb/=lib/zorb/packages/zorb-contracts/contracts/\"]},\"sources\":{\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6c051a020af35571551a3a1bd2dfc5913f7f5adaf463fcc925dbe8a50dee8071\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88a35e714ee3f7d6fe6eda24c7eb3d4195a33d8d71f49a5679a8b149ae064a52\",\"dweb:/ipfs/QmbZ3wmQ9KivRNF6zhJe8xcHWKoHx23WG18uxHPv1mmqGx\"]},\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb0308d8c5873c6e6c9a712669d33f77f3eb04dfbd3559ed901fa8d799673d176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0280faa8e071ed4648d8538354452be776b7e5ba5b965d4cf9b4d3f6509c920c\",\"dweb:/ipfs/QmT9qNNpCH6NLMheAwxRHinRvuQZvLdg3TsQmCnk1aMVaq\"]},\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/zorb/packages/zorb-contracts/contracts/ColorLib.sol\":{\"keccak256\":\"0xb354e42eb85a2f7769f19596527a8e52b4e0edef1b504ad07aa9abef2fcc239f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://86a9f3656a020e9959267e36a2fa7f2d2bbaac16ebd9a3ec2b2d6850241358ad\",\"dweb:/ipfs/Qmc5MwGkQhg1pqVisvWB3tubr6KTVVEMfFSq7srCtDruAZ\"]},\"lib/zorb/packages/zorb-contracts/contracts/IPublicSharedMetadata.sol\":{\"keccak256\":\"0xea069cb144138d5542683cbceb0a02f53b9d6a9056a9e40539f2106d0980a35a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7e28261784ba0da768cb991827003e5d24c0a06324f48f1c56702355c39f6a99\",\"dweb:/ipfs/QmbnBU28wRTvyV3mGhNGQeeEDBVxQdHMML7izY4ck5YQ4n\"]},\"lib/zorb/packages/zorb-contracts/contracts/ZorbNFT.sol\":{\"keccak256\":\"0xd033a37ae7fb4c11a6c0d6b004c476729696a9182a9a0ae7482796dd9843fa15\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://77f01b96564ecd9dd9a936eade9a623b4eb3187e6aff1c3c07de031e020a014e\",\"dweb:/ipfs/QmZySXAR6xt9KV2oQuq1KGQmpGRow2NKA2ntEM1kQDDjtu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPublicSharedMetadata",
              "name": "_sharedMetadata",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "airdrop"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getZorbRenderAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "gradientForAddress",
          "outputs": [
            {
              "internalType": "bytes[5]",
              "name": "",
              "type": "bytes[5]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mintIsOpen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "marketPlaces",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "isKnown",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setKnownMarketplaces"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "zorbForAddress",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "airdrop(address[])": {
            "params": {
              "to": "list of addresses to airdrop to"
            }
          },
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "constructor": {
            "params": {
              "_sharedMetadata": "linked metadata contract"
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getZorbRenderAddress(uint256)": {
            "params": {
              "tokenId": "id of token to get render address for"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setKnownMarketplaces(address[],bool)": {
            "params": {
              "isKnown": "flag if the above marketplaces are known",
              "marketPlaces": "list of addresses"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "params": {
              "tokenId": "token id to render"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "zorbForAddress(address)": {
            "params": {
              "user": "address to get Zorb SVG for"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "airdrop(address[])": {
            "notice": "Public airdrop of tokens to _other_ addresses"
          },
          "constructor": {
            "notice": "Make the Zorb contract"
          },
          "getZorbRenderAddress(uint256)": {
            "notice": "Determines the actual rendering address instead of just owner address for given zorb id"
          },
          "mint()": {
            "notice": "Simple public mint function"
          },
          "mintIsOpen()": {
            "notice": "Informational function returning if the mint is currently ongoing"
          },
          "setKnownMarketplaces(address[],bool)": {
            "notice": "Set known marketplace contracts"
          },
          "tokenURI(uint256)": {
            "notice": "TokenURI function returning on-chain encoded SVG for each Zorb"
          },
          "totalSupply()": {
            "notice": "Number of minted tokens."
          },
          "zorbForAddress(address)": {
            "notice": "Public getter for getting the given Zorb for an address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/zora-drops-contracts/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/",
        ":ERC721A-Upgradeable/=lib/zora-drops-contracts/lib/ERC721A-Upgradeable/contracts/",
        ":base64/=lib/zora-drops-contracts/lib/base64/",
        ":ds-test/=lib/zora-drops-contracts/lib/ds-test/src/",
        ":erc721a-upgradeable/=lib/zora-drops-contracts/lib/ERC721A-Upgradeable/contracts/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/zora-drops-contracts/lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":zora-drops-contracts/=lib/zora-drops-contracts/src/",
        ":zorb/=lib/zorb/packages/zorb-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/zorb/packages/zorb-contracts/contracts/ZorbNFT.sol": "ZorbNFT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x6c051a020af35571551a3a1bd2dfc5913f7f5adaf463fcc925dbe8a50dee8071",
        "urls": [
          "bzz-raw://88a35e714ee3f7d6fe6eda24c7eb3d4195a33d8d71f49a5679a8b149ae064a52",
          "dweb:/ipfs/QmbZ3wmQ9KivRNF6zhJe8xcHWKoHx23WG18uxHPv1mmqGx"
        ],
        "license": "MIT"
      },
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xb0308d8c5873c6e6c9a712669d33f77f3eb04dfbd3559ed901fa8d799673d176",
        "urls": [
          "bzz-raw://0280faa8e071ed4648d8538354452be776b7e5ba5b965d4cf9b4d3f6509c920c",
          "dweb:/ipfs/QmT9qNNpCH6NLMheAwxRHinRvuQZvLdg3TsQmCnk1aMVaq"
        ],
        "license": "MIT"
      },
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/zorb/packages/zorb-contracts/contracts/ColorLib.sol": {
        "keccak256": "0xb354e42eb85a2f7769f19596527a8e52b4e0edef1b504ad07aa9abef2fcc239f",
        "urls": [
          "bzz-raw://86a9f3656a020e9959267e36a2fa7f2d2bbaac16ebd9a3ec2b2d6850241358ad",
          "dweb:/ipfs/Qmc5MwGkQhg1pqVisvWB3tubr6KTVVEMfFSq7srCtDruAZ"
        ],
        "license": "GPL-3.0"
      },
      "lib/zorb/packages/zorb-contracts/contracts/IPublicSharedMetadata.sol": {
        "keccak256": "0xea069cb144138d5542683cbceb0a02f53b9d6a9056a9e40539f2106d0980a35a",
        "urls": [
          "bzz-raw://7e28261784ba0da768cb991827003e5d24c0a06324f48f1c56702355c39f6a99",
          "dweb:/ipfs/QmbnBU28wRTvyV3mGhNGQeeEDBVxQdHMML7izY4ck5YQ4n"
        ],
        "license": "GPL-3.0"
      },
      "lib/zorb/packages/zorb-contracts/contracts/ZorbNFT.sol": {
        "keccak256": "0xd033a37ae7fb4c11a6c0d6b004c476729696a9182a9a0ae7482796dd9843fa15",
        "urls": [
          "bzz-raw://77f01b96564ecd9dd9a936eade9a623b4eb3187e6aff1c3c07de031e020a014e",
          "dweb:/ipfs/QmZySXAR6xt9KV2oQuq1KGQmpGRow2NKA2ntEM1kQDDjtu"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/zorb/packages/zorb-contracts/contracts/ZorbNFT.sol",
    "id": 27350,
    "exportedSymbols": {
      "ColorLib": [
        26915
      ],
      "Counters": [
        24643
      ],
      "ERC721": [
        24091
      ],
      "INFT": [
        26963
      ],
      "IPublicSharedMetadata": [
        26943
      ],
      "Ownable": [
        23225
      ],
      "ZorbNFT": [
        27349
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:13718:20",
    "nodes": [
      {
        "id": 26945,
        "nodeType": "PragmaDirective",
        "src": "36:23:20",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 26947,
        "nodeType": "ImportDirective",
        "src": "7055:68:20",
        "nodes": [],
        "absolutePath": "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27350,
        "sourceUnit": 24644,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26946,
              "name": "Counters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "7063:8:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26949,
        "nodeType": "ImportDirective",
        "src": "7124:71:20",
        "nodes": [],
        "absolutePath": "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27350,
        "sourceUnit": 24092,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26948,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "7132:6:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26951,
        "nodeType": "ImportDirective",
        "src": "7196:67:20",
        "nodes": [],
        "absolutePath": "lib/zora-drops-contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27350,
        "sourceUnit": 23226,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26950,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "7204:7:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26953,
        "nodeType": "ImportDirective",
        "src": "7264:66:20",
        "nodes": [],
        "absolutePath": "lib/zorb/packages/zorb-contracts/contracts/IPublicSharedMetadata.sol",
        "file": "./IPublicSharedMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27350,
        "sourceUnit": 26944,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26952,
              "name": "IPublicSharedMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "7272:21:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26955,
        "nodeType": "ImportDirective",
        "src": "7331:40:20",
        "nodes": [],
        "absolutePath": "lib/zorb/packages/zorb-contracts/contracts/ColorLib.sol",
        "file": "./ColorLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27350,
        "sourceUnit": 26916,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26954,
              "name": "ColorLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "7339:8:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26963,
        "nodeType": "ContractDefinition",
        "src": "7373:89:20",
        "nodes": [
          {
            "id": 26962,
            "nodeType": "FunctionDefinition",
            "src": "7394:66:20",
            "nodes": [],
            "functionSelector": "6352211e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "7403:7:20",
            "parameters": {
              "id": 26958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26957,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7419:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 26962,
                  "src": "7411:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7411:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7410:17:20"
            },
            "returnParameters": {
              "id": 26961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26962,
                  "src": "7451:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7451:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7450:9:20"
            },
            "scope": 26963,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "INFT",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          26963
        ],
        "name": "INFT",
        "nameLocation": "7383:4:20",
        "scope": 27350,
        "usedErrors": []
      },
      {
        "id": 27349,
        "nodeType": "ContractDefinition",
        "src": "7558:6195:20",
        "nodes": [
          {
            "id": 26972,
            "nodeType": "UsingForDirective",
            "src": "7600:36:20",
            "nodes": [],
            "libraryName": {
              "id": 26969,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24643,
              "src": "7606:8:20"
            },
            "typeName": {
              "id": 26971,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26970,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24575,
                "src": "7619:16:20"
              },
              "referencedDeclaration": 24575,
              "src": "7619:16:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$24575_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 26976,
            "nodeType": "VariableDeclaration",
            "src": "7693:51:20",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 26973,
              "nodeType": "StructuredDocumentation",
              "src": "7642:46:20",
              "text": "Production mint start = 2022 EST new years"
            },
            "mutability": "constant",
            "name": "MINT_START_AT",
            "nameLocation": "7718:13:20",
            "scope": 27349,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26974,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7693:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31363431303133323030",
              "id": 26975,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7734:10:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1641013200_by_1",
                "typeString": "int_const 1641013200"
              },
              "value": "1641013200"
            },
            "visibility": "private"
          },
          {
            "id": 26980,
            "nodeType": "VariableDeclaration",
            "src": "7800:49:20",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 26977,
              "nodeType": "StructuredDocumentation",
              "src": "7751:44:20",
              "text": "Production mint duration = 20 + 22 hours"
            },
            "mutability": "constant",
            "name": "MINT_DURATION",
            "nameLocation": "7825:13:20",
            "scope": 27349,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26978,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7800:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3432",
              "id": 26979,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7841:8:20",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_151200_by_1",
                "typeString": "int_const 151200"
              },
              "value": "42"
            },
            "visibility": "private"
          },
          {
            "id": 26985,
            "nodeType": "VariableDeclaration",
            "src": "7941:49:20",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26981,
              "nodeType": "StructuredDocumentation",
              "src": "7856:80:20",
              "text": "Mapping that stores known marketplace contracts (escrow/auction/staking etc)"
            },
            "mutability": "mutable",
            "name": "knownMarketplace",
            "nameLocation": "7974:16:20",
            "scope": 27349,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 26984,
              "keyType": {
                "id": 26982,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7949:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7941:24:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 26983,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "7960:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 26990,
            "nodeType": "VariableDeclaration",
            "src": "8072:45:20",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26986,
              "nodeType": "StructuredDocumentation",
              "src": "7996:71:20",
              "text": "Last owner lookup to preserve last known zorb while NFT is escrowed"
            },
            "mutability": "mutable",
            "name": "lastOwner",
            "nameLocation": "8108:9:20",
            "scope": 27349,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 26989,
              "keyType": {
                "id": 26987,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "8080:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "8072:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 26988,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8091:7:20",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 26994,
            "nodeType": "VariableDeclaration",
            "src": "8178:31:20",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26991,
              "nodeType": "StructuredDocumentation",
              "src": "8124:49:20",
              "text": "Counter keeping track of last minted token id"
            },
            "mutability": "mutable",
            "name": "currentTokenId",
            "nameLocation": "8195:14:20",
            "scope": 27349,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$24575_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 26993,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26992,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24575,
                "src": "8178:16:20"
              },
              "referencedDeclaration": 24575,
              "src": "8178:16:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$24575_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26998,
            "nodeType": "VariableDeclaration",
            "src": "8248:54:20",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26995,
              "nodeType": "StructuredDocumentation",
              "src": "8216:27:20",
              "text": "Metadata helper library"
            },
            "mutability": "immutable",
            "name": "sharedMetadata",
            "nameLocation": "8288:14:20",
            "scope": 27349,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPublicSharedMetadata_$26943",
              "typeString": "contract IPublicSharedMetadata"
            },
            "typeName": {
              "id": 26997,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26996,
                "name": "IPublicSharedMetadata",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26943,
                "src": "8248:21:20"
              },
              "referencedDeclaration": 26943,
              "src": "8248:21:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPublicSharedMetadata_$26943",
                "typeString": "contract IPublicSharedMetadata"
              }
            },
            "visibility": "private"
          },
          {
            "id": 27014,
            "nodeType": "ModifierDefinition",
            "src": "8373:131:20",
            "nodes": [],
            "body": {
              "id": 27013,
              "nodeType": "Block",
              "src": "8412:92:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 27005,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8449:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 27006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8449:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 27007,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27001,
                            "src": "8461:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 27004,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23705,
                          "src": "8430:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 27008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8430:39:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e7920617070726f766564",
                        "id": 27009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8471:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1f4a3beec0455baf24859eb4fc92e7d276b3ce9ebe03fb4359aba447c6cadff",
                          "typeString": "literal_string \"Ony approved\""
                        },
                        "value": "Ony approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1f4a3beec0455baf24859eb4fc92e7d276b3ce9ebe03fb4359aba447c6cadff",
                          "typeString": "literal_string \"Ony approved\""
                        }
                      ],
                      "id": 27003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8422:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8422:64:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27011,
                  "nodeType": "ExpressionStatement",
                  "src": "8422:64:20"
                },
                {
                  "id": 27012,
                  "nodeType": "PlaceholderStatement",
                  "src": "8496:1:20"
                }
              ]
            },
            "documentation": {
              "id": 26999,
              "nodeType": "StructuredDocumentation",
              "src": "8309:59:20",
              "text": "Checks if a contract interation is approved or by owner"
            },
            "name": "onlyApproved",
            "nameLocation": "8382:12:20",
            "parameters": {
              "id": 27002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27001,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8403:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27014,
                  "src": "8395:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8395:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8394:17:20"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 27035,
            "nodeType": "FunctionDefinition",
            "src": "8597:160:20",
            "nodes": [],
            "body": {
              "id": 27034,
              "nodeType": "Block",
              "src": "8672:85:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 27027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27025,
                      "name": "sharedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26998,
                      "src": "8682:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPublicSharedMetadata_$26943",
                        "typeString": "contract IPublicSharedMetadata"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27026,
                      "name": "_sharedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27018,
                      "src": "8699:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPublicSharedMetadata_$26943",
                        "typeString": "contract IPublicSharedMetadata"
                      }
                    },
                    "src": "8682:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPublicSharedMetadata_$26943",
                      "typeString": "contract IPublicSharedMetadata"
                    }
                  },
                  "id": 27028,
                  "nodeType": "ExpressionStatement",
                  "src": "8682:32:20"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 27029,
                        "name": "currentTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26994,
                        "src": "8724:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$24575_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 27031,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24601,
                      "src": "8724:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$24575_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$24575_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 27032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8724:26:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27033,
                  "nodeType": "ExpressionStatement",
                  "src": "8724:26:20"
                }
              ]
            },
            "documentation": {
              "id": 27015,
              "nodeType": "StructuredDocumentation",
              "src": "8510:82:20",
              "text": "Make the Zorb contract\n @param _sharedMetadata linked metadata contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5a6f726273",
                    "id": 27021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8655:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b086a9c9699bbfbb9987a8af80843b06e469ef6e8b221707ebb658a20eb7513d",
                      "typeString": "literal_string \"Zorbs\""
                    },
                    "value": "Zorbs"
                  },
                  {
                    "hexValue": "5a4f5242",
                    "id": 27022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8664:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2047183d712c123757df83a32ef42b42fb87480c2fd6fc916520db9a824fa543",
                      "typeString": "literal_string \"ZORB\""
                    },
                    "value": "ZORB"
                  }
                ],
                "id": 27023,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 27020,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24091,
                  "src": "8648:6:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "8648:23:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 27019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27018,
                  "mutability": "mutable",
                  "name": "_sharedMetadata",
                  "nameLocation": "8631:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27035,
                  "src": "8609:37:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPublicSharedMetadata_$26943",
                    "typeString": "contract IPublicSharedMetadata"
                  },
                  "typeName": {
                    "id": 27017,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 27016,
                      "name": "IPublicSharedMetadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26943,
                      "src": "8609:21:20"
                    },
                    "referencedDeclaration": 26943,
                    "src": "8609:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPublicSharedMetadata_$26943",
                      "typeString": "contract IPublicSharedMetadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8608:39:20"
            },
            "returnParameters": {
              "id": 27024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8672:0:20"
            },
            "scope": 27349,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27068,
            "nodeType": "FunctionDefinition",
            "src": "8913:230:20",
            "nodes": [],
            "body": {
              "id": 27067,
              "nodeType": "Block",
              "src": "9009:134:20",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 27065,
                    "nodeType": "Block",
                    "src": "9069:68:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 27063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 27057,
                              "name": "knownMarketplace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26985,
                              "src": "9083:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 27061,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 27058,
                                "name": "marketPlaces",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27039,
                                "src": "9100:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 27060,
                              "indexExpression": {
                                "id": 27059,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27047,
                                "src": "9113:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9100:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9083:33:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 27062,
                            "name": "isKnown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27041,
                            "src": "9119:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9083:43:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 27064,
                        "nodeType": "ExpressionStatement",
                        "src": "9083:43:20"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 27050,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27047,
                      "src": "9039:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 27051,
                        "name": "marketPlaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27039,
                        "src": "9043:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 27052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9043:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9039:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27066,
                  "initializationExpression": {
                    "assignments": [
                      27047
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 27047,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9032:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 27066,
                        "src": "9024:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27046,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9024:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 27049,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 27048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9036:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9024:13:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 27055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9064:3:20",
                      "subExpression": {
                        "id": 27054,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27047,
                        "src": "9064:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27056,
                    "nodeType": "ExpressionStatement",
                    "src": "9064:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "9019:118:20"
                }
              ]
            },
            "documentation": {
              "id": 27036,
              "nodeType": "StructuredDocumentation",
              "src": "8763:145:20",
              "text": "Set known marketplace contracts\n @param marketPlaces list of addresses\n @param isKnown flag if the above marketplaces are known"
            },
            "functionSelector": "6411fb45",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 27044,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27043,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23167,
                  "src": "8999:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "8999:9:20"
              }
            ],
            "name": "setKnownMarketplaces",
            "nameLocation": "8922:20:20",
            "parameters": {
              "id": 27042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27039,
                  "mutability": "mutable",
                  "name": "marketPlaces",
                  "nameLocation": "8962:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27068,
                  "src": "8943:31:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27037,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8943:7:20",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27038,
                    "nodeType": "ArrayTypeName",
                    "src": "8943:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27041,
                  "mutability": "mutable",
                  "name": "isKnown",
                  "nameLocation": "8981:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27068,
                  "src": "8976:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27040,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8976:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8942:47:20"
            },
            "returnParameters": {
              "id": 27045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9009:0:20"
            },
            "scope": 27349,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27087,
            "nodeType": "FunctionDefinition",
            "src": "9223:156:20",
            "nodes": [],
            "body": {
              "id": 27086,
              "nodeType": "Block",
              "src": "9272:107:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 27084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 27077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 27074,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "9289:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 27075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "9289:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 27076,
                        "name": "MINT_START_AT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26976,
                        "src": "9307:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9289:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 27083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 27078,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "9324:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 27079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "9324:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27080,
                          "name": "MINT_START_AT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26976,
                          "src": "9343:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 27081,
                          "name": "MINT_DURATION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26980,
                          "src": "9359:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9343:29:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9324:48:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9289:83:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 27073,
                  "id": 27085,
                  "nodeType": "Return",
                  "src": "9282:90:20"
                }
              ]
            },
            "documentation": {
              "id": 27069,
              "nodeType": "StructuredDocumentation",
              "src": "9149:69:20",
              "text": "Informational function returning if the mint is currently ongoing"
            },
            "functionSelector": "aa1152ab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintIsOpen",
            "nameLocation": "9232:10:20",
            "parameters": {
              "id": 27070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9242:2:20"
            },
            "returnParameters": {
              "id": 27073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27072,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27087,
                  "src": "9266:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27071,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9266:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9265:6:20"
            },
            "scope": 27349,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27111,
            "nodeType": "FunctionDefinition",
            "src": "9421:167:20",
            "nodes": [],
            "body": {
              "id": 27110,
              "nodeType": "Block",
              "src": "9444:144:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 27092,
                          "name": "mintIsOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27087,
                          "src": "9462:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 27093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9462:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74206e6f74206f70656e",
                        "id": 27094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9476:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba7b93ce180d3a79e64bc2817337dbc5bb39da35865ec72041de44359a9e0a25",
                          "typeString": "literal_string \"Mint not open\""
                        },
                        "value": "Mint not open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba7b93ce180d3a79e64bc2817337dbc5bb39da35865ec72041de44359a9e0a25",
                          "typeString": "literal_string \"Mint not open\""
                        }
                      ],
                      "id": 27091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9454:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9454:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27096,
                  "nodeType": "ExpressionStatement",
                  "src": "9454:38:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9508:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 27099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9508:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 27100,
                            "name": "currentTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26994,
                            "src": "9520:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$24575_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 27101,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24587,
                          "src": "9520:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$24575_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$24575_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 27102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9520:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27097,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23815,
                      "src": "9502:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 27103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9502:43:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27104,
                  "nodeType": "ExpressionStatement",
                  "src": "9502:43:20"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 27105,
                        "name": "currentTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26994,
                        "src": "9555:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$24575_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 27107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24601,
                      "src": "9555:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$24575_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$24575_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 27108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9555:26:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27109,
                  "nodeType": "ExpressionStatement",
                  "src": "9555:26:20"
                }
              ]
            },
            "documentation": {
              "id": 27088,
              "nodeType": "StructuredDocumentation",
              "src": "9385:31:20",
              "text": "Simple public mint function"
            },
            "functionSelector": "1249c58b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "9430:4:20",
            "parameters": {
              "id": 27089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9434:2:20"
            },
            "returnParameters": {
              "id": 27090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9444:0:20"
            },
            "scope": 27349,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27124,
            "nodeType": "FunctionDefinition",
            "src": "9627:159:20",
            "nodes": [],
            "body": {
              "id": 27123,
              "nodeType": "Block",
              "src": "9680:106:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 27117,
                          "name": "currentTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26994,
                          "src": "9751:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$24575_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 27118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24587,
                        "src": "9751:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$24575_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$24575_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 27119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9751:24:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 27120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9778:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9751:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27116,
                  "id": 27122,
                  "nodeType": "Return",
                  "src": "9744:35:20"
                }
              ]
            },
            "documentation": {
              "id": 27112,
              "nodeType": "StructuredDocumentation",
              "src": "9594:28:20",
              "text": "Number of minted tokens."
            },
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "9636:11:20",
            "parameters": {
              "id": 27113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9647:2:20"
            },
            "returnParameters": {
              "id": 27116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27124,
                  "src": "9671:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9671:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9670:9:20"
            },
            "scope": 27349,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27165,
            "nodeType": "FunctionDefinition",
            "src": "9896:252:20",
            "nodes": [],
            "body": {
              "id": 27164,
              "nodeType": "Block",
              "src": "9941:207:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 27132,
                          "name": "mintIsOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27087,
                          "src": "9959:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 27133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9959:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74206e6f74206f70656e",
                        "id": 27134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9973:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba7b93ce180d3a79e64bc2817337dbc5bb39da35865ec72041de44359a9e0a25",
                          "typeString": "literal_string \"Mint not open\""
                        },
                        "value": "Mint not open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba7b93ce180d3a79e64bc2817337dbc5bb39da35865ec72041de44359a9e0a25",
                          "typeString": "literal_string \"Mint not open\""
                        }
                      ],
                      "id": 27131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9951:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9951:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27136,
                  "nodeType": "ExpressionStatement",
                  "src": "9951:38:20"
                },
                {
                  "body": {
                    "id": 27162,
                    "nodeType": "Block",
                    "src": "10039:103:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 27149,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27128,
                                "src": "10059:2:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 27151,
                              "indexExpression": {
                                "id": 27150,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27138,
                                "src": "10062:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10059:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 27152,
                                  "name": "currentTokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26994,
                                  "src": "10066:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$24575_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 27153,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24587,
                                "src": "10066:22:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$24575_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$24575_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 27154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10066:24:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 27148,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23815,
                            "src": "10053:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 27155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10053:38:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27156,
                        "nodeType": "ExpressionStatement",
                        "src": "10053:38:20"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 27157,
                              "name": "currentTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26994,
                              "src": "10105:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$24575_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 27159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24601,
                            "src": "10105:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$24575_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$24575_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 27160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10105:26:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27161,
                        "nodeType": "ExpressionStatement",
                        "src": "10105:26:20"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 27141,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27138,
                      "src": "10019:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 27142,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27128,
                        "src": "10023:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 27143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10023:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10019:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27163,
                  "initializationExpression": {
                    "assignments": [
                      27138
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 27138,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10012:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 27163,
                        "src": "10004:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10004:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 27140,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 27139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10016:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10004:13:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 27146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10034:3:20",
                      "subExpression": {
                        "id": 27145,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27138,
                        "src": "10034:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27147,
                    "nodeType": "ExpressionStatement",
                    "src": "10034:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "9999:143:20"
                }
              ]
            },
            "documentation": {
              "id": 27125,
              "nodeType": "StructuredDocumentation",
              "src": "9792:99:20",
              "text": "Public airdrop of tokens to _other_ addresses\n @param to list of addresses to airdrop to"
            },
            "functionSelector": "729ad39e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "airdrop",
            "nameLocation": "9905:7:20",
            "parameters": {
              "id": 27129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27128,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9930:2:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27165,
                  "src": "9913:19:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27126,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9913:7:20",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27127,
                    "nodeType": "ArrayTypeName",
                    "src": "9913:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9912:21:20"
            },
            "returnParameters": {
              "id": 27130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9941:0:20"
            },
            "scope": 27349,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27180,
            "nodeType": "FunctionDefinition",
            "src": "10154:137:20",
            "nodes": [],
            "body": {
              "id": 27179,
              "nodeType": "Block",
              "src": "10234:57:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27176,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27167,
                        "src": "10279:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27174,
                        "name": "ColorLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26915,
                        "src": "10251:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ColorLib_$26915_$",
                          "typeString": "type(library ColorLib)"
                        }
                      },
                      "id": 27175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gradientForAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26914,
                      "src": "10251:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_array$_t_bytes_memory_ptr_$5_memory_ptr_$",
                        "typeString": "function (address) pure returns (bytes memory[5] memory)"
                      }
                    },
                    "id": 27177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10251:33:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$5_memory_ptr",
                      "typeString": "bytes memory[5] memory"
                    }
                  },
                  "functionReturnParameters": 27173,
                  "id": 27178,
                  "nodeType": "Return",
                  "src": "10244:40:20"
                }
              ]
            },
            "functionSelector": "03ff85ff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "gradientForAddress",
            "nameLocation": "10163:18:20",
            "parameters": {
              "id": 27168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27167,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10190:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27180,
                  "src": "10182:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10182:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10181:14:20"
            },
            "returnParameters": {
              "id": 27173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27180,
                  "src": "10217:15:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$5_memory_ptr",
                    "typeString": "bytes[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27169,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "10217:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 27171,
                    "length": {
                      "hexValue": "35",
                      "id": 27170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10223:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "10217:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$5_storage_ptr",
                      "typeString": "bytes[5]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10216:17:20"
            },
            "scope": 27349,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27238,
            "nodeType": "FunctionDefinition",
            "src": "10409:1554:20",
            "nodes": [],
            "body": {
              "id": 27237,
              "nodeType": "Block",
              "src": "10483:1480:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    27193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27193,
                      "mutability": "mutable",
                      "name": "colors",
                      "nameLocation": "10509:6:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 27237,
                      "src": "10493:22:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$5_memory_ptr",
                        "typeString": "bytes[5]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 27191,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10493:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 27192,
                        "length": {
                          "hexValue": "35",
                          "id": 27190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10499:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "10493:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$5_storage_ptr",
                          "typeString": "bytes[5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27197,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27195,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27183,
                        "src": "10537:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27194,
                      "name": "gradientForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27180,
                      "src": "10518:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_array$_t_bytes_memory_ptr_$5_memory_ptr_$",
                        "typeString": "function (address) pure returns (bytes memory[5] memory)"
                      }
                    },
                    "id": 27196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10518:24:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$5_memory_ptr",
                      "typeString": "bytes memory[5] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10493:49:20"
                },
                {
                  "assignments": [
                    27199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27199,
                      "mutability": "mutable",
                      "name": "encoded",
                      "nameLocation": "10566:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 27237,
                      "src": "10552:21:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 27198,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10552:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27227,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667222076696577426f783d223020302031313020313130223e3c646566733e3c72616469616c4772616469656e742069643d22677a7222206772616469656e745472616e73666f726d3d227472616e736c6174652836362e343537382032342e3335373529207363616c652837352e323930382922206772616469656e74556e6974733d227573657253706163654f6e5573652220723d2231222063783d2230222063793d223025223e3c73746f70206f66667365743d2231352e363225222073746f702d636f6c6f723d22",
                            "id": 27204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10651:399:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_82c15225b67d644bd20df9272892a7fdd5cc5f951e7241fb31999beb97a84931",
                              "typeString": "literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 110 110\"><defs><radialGradient id=\"gzr\" gradientTransform=\"translate(66.4578 24.3575) scale(75.2908)\" gradientUnits=\"userSpaceOnUse\" r=\"1\" cx=\"0\" cy=\"0%\"><stop offset=\"15.62%\" stop-color=\"\""
                            },
                            "value": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 110 110\"><defs><radialGradient id=\"gzr\" gradientTransform=\"translate(66.4578 24.3575) scale(75.2908)\" gradientUnits=\"userSpaceOnUse\" r=\"1\" cx=\"0\" cy=\"0%\"><stop offset=\"15.62%\" stop-color=\""
                          },
                          {
                            "baseExpression": {
                              "id": 27205,
                              "name": "colors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27193,
                              "src": "11068:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$5_memory_ptr",
                                "typeString": "bytes memory[5] memory"
                              }
                            },
                            "id": 27207,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 27206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11075:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11068:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "22202f3e3c73746f70206f66667365743d2233392e353825222073746f702d636f6c6f723d22",
                            "id": 27208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11095:40:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ee2eb1b7da1625c5001c3c3fe7ef8f902c88a44a07bd661b70dcd107982e6b71",
                              "typeString": "literal_string \"\" /><stop offset=\"39.58%\" stop-color=\"\""
                            },
                            "value": "\" /><stop offset=\"39.58%\" stop-color=\""
                          },
                          {
                            "baseExpression": {
                              "id": 27209,
                              "name": "colors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27193,
                              "src": "11153:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$5_memory_ptr",
                                "typeString": "bytes memory[5] memory"
                              }
                            },
                            "id": 27211,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 27210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11160:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11153:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "22202f3e3c73746f70206f66667365743d2237322e393225222073746f702d636f6c6f723d22",
                            "id": 27212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11180:40:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_af5a021c2e2532bccbd01d2bbd37eacaa6bf9d780627256cdf8dd388df0b4d18",
                              "typeString": "literal_string \"\" /><stop offset=\"72.92%\" stop-color=\"\""
                            },
                            "value": "\" /><stop offset=\"72.92%\" stop-color=\""
                          },
                          {
                            "baseExpression": {
                              "id": 27213,
                              "name": "colors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27193,
                              "src": "11238:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$5_memory_ptr",
                                "typeString": "bytes memory[5] memory"
                              }
                            },
                            "id": 27215,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 27214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11245:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11238:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "22202f3e3c73746f70206f66667365743d2239302e363325222073746f702d636f6c6f723d22",
                            "id": 27216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11265:40:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_92757eba415202ca986122c065c2d9deeb35150678053440f8c4751c792b5905",
                              "typeString": "literal_string \"\" /><stop offset=\"90.63%\" stop-color=\"\""
                            },
                            "value": "\" /><stop offset=\"90.63%\" stop-color=\""
                          },
                          {
                            "baseExpression": {
                              "id": 27217,
                              "name": "colors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27193,
                              "src": "11323:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$5_memory_ptr",
                                "typeString": "bytes memory[5] memory"
                              }
                            },
                            "id": 27219,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 27218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11330:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11323:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "22202f3e3c73746f70206f66667365743d2231303025222073746f702d636f6c6f723d22",
                            "id": 27220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11350:38:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_500a93febb438610e42fa9ffafaf2e0993415701677cdb885d20b5a0c6a63e5d",
                              "typeString": "literal_string \"\" /><stop offset=\"100%\" stop-color=\"\""
                            },
                            "value": "\" /><stop offset=\"100%\" stop-color=\""
                          },
                          {
                            "baseExpression": {
                              "id": 27221,
                              "name": "colors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27193,
                              "src": "11406:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$5_memory_ptr",
                                "typeString": "bytes memory[5] memory"
                              }
                            },
                            "id": 27223,
                            "indexExpression": {
                              "hexValue": "34",
                              "id": 27222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11413:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11406:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "22202f3e3c2f72616469616c4772616469656e743e3c2f646566733e3c67207472616e73666f726d3d227472616e736c61746528352c3529223e3c7061746820643d224d313030203530433130302032322e333835382037372e36313432203020353020304332322e33383538203020302032322e33383538203020353043302037372e363134322032322e3338353820313030203530203130304337372e3631343220313030203130302037372e36313432203130302035305a222066696c6c3d2275726c2823677a722922202f3e3c70617468207374726f6b653d227267626128302c302c302c302e30373529222066696c6c3d227472616e73706172656e7422207374726f6b652d77696474683d22312220643d224d35302c302e356332372e332c302c34392e352c32322e322c34392e352c34392e355337372e332c39392e352c35302c39392e3553302e352c37372e332c302e352c35305332322e372c302e352c35302c302e357a22202f3e3c2f673e3c2f7376673e",
                            "id": 27224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11433:419:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ff1a92fa425b6c362a5909bd509c14c336ba6f54d38ee0b0998a7413c64fd689",
                              "typeString": "literal_string \"\" /></radialGradient></defs><g transform=\"translate(5,5)\"><path d=\"M100 50C100 22.3858 77.6142 0 50 0C22.3858 0 0 22.3858 0 50C0 77.6142 22.3858 100 50 100C77.6142 100 100 77.6142 100 50Z\" fill=\"url(#gzr)\" /><path stroke=\"rgba(0,0,0,0.075)\" fill=\"transparent\" stroke-width=\"1\" d=\"M50,0.5c27.3,0,49.5,22.2,49.5,49.5S77.3,99.5,50,99.5S0.5,77.3,0.5,50S22.7,0.5,50,0.5z\" /></g></svg>\""
                            },
                            "value": "\" /></radialGradient></defs><g transform=\"translate(5,5)\"><path d=\"M100 50C100 22.3858 77.6142 0 50 0C22.3858 0 0 22.3858 0 50C0 77.6142 22.3858 100 50 100C77.6142 100 100 77.6142 100 50Z\" fill=\"url(#gzr)\" /><path stroke=\"rgba(0,0,0,0.075)\" fill=\"transparent\" stroke-width=\"1\" d=\"M50,0.5c27.3,0,49.5,22.2,49.5,49.5S77.3,99.5,50,99.5S0.5,77.3,0.5,50S22.7,0.5,50,0.5z\" /></g></svg>"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_82c15225b67d644bd20df9272892a7fdd5cc5f951e7241fb31999beb97a84931",
                              "typeString": "literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 110 110\"><defs><radialGradient id=\"gzr\" gradientTransform=\"translate(66.4578 24.3575) scale(75.2908)\" gradientUnits=\"userSpaceOnUse\" r=\"1\" cx=\"0\" cy=\"0%\"><stop offset=\"15.62%\" stop-color=\"\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ee2eb1b7da1625c5001c3c3fe7ef8f902c88a44a07bd661b70dcd107982e6b71",
                              "typeString": "literal_string \"\" /><stop offset=\"39.58%\" stop-color=\"\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_af5a021c2e2532bccbd01d2bbd37eacaa6bf9d780627256cdf8dd388df0b4d18",
                              "typeString": "literal_string \"\" /><stop offset=\"72.92%\" stop-color=\"\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_92757eba415202ca986122c065c2d9deeb35150678053440f8c4751c792b5905",
                              "typeString": "literal_string \"\" /><stop offset=\"90.63%\" stop-color=\"\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_500a93febb438610e42fa9ffafaf2e0993415701677cdb885d20b5a0c6a63e5d",
                              "typeString": "literal_string \"\" /><stop offset=\"100%\" stop-color=\"\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ff1a92fa425b6c362a5909bd509c14c336ba6f54d38ee0b0998a7413c64fd689",
                              "typeString": "literal_string \"\" /></radialGradient></defs><g transform=\"translate(5,5)\"><path d=\"M100 50C100 22.3858 77.6142 0 50 0C22.3858 0 0 22.3858 0 50C0 77.6142 22.3858 100 50 100C77.6142 100 100 77.6142 100 50Z\" fill=\"url(#gzr)\" /><path stroke=\"rgba(0,0,0,0.075)\" fill=\"transparent\" stroke-width=\"1\" d=\"M50,0.5c27.3,0,49.5,22.2,49.5,49.5S77.3,99.5,50,99.5S0.5,77.3,0.5,50S22.7,0.5,50,0.5z\" /></g></svg>\""
                            }
                          ],
                          "expression": {
                            "id": 27202,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10617:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 27203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10617:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 27225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10617:1249:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 27200,
                        "name": "sharedMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26998,
                        "src": "10576:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPublicSharedMetadata_$26943",
                          "typeString": "contract IPublicSharedMetadata"
                        }
                      },
                      "id": 27201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "base64Encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26926,
                      "src": "10576:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes memory) pure external returns (string memory)"
                      }
                    },
                    "id": 27226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10576:1300:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10552:1324:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "646174613a696d6167652f7376672b786d6c3b6261736536342c",
                            "id": 27232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11917:28:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14",
                              "typeString": "literal_string \"data:image/svg+xml;base64,\""
                            },
                            "value": "data:image/svg+xml;base64,"
                          },
                          {
                            "id": 27233,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27199,
                            "src": "11947:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14",
                              "typeString": "literal_string \"data:image/svg+xml;base64,\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 27230,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11900:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 27231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "11900:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 27234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11900:55:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 27229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11893:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 27228,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "11893:6:20",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 27235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11893:63:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 27187,
                  "id": 27236,
                  "nodeType": "Return",
                  "src": "11886:70:20"
                }
              ]
            },
            "documentation": {
              "id": 27181,
              "nodeType": "StructuredDocumentation",
              "src": "10297:107:20",
              "text": "Public getter for getting the given Zorb for an address\n @param user address to get Zorb SVG for"
            },
            "functionSelector": "de909942",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "zorbForAddress",
            "nameLocation": "10418:14:20",
            "parameters": {
              "id": 27184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27183,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10441:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27238,
                  "src": "10433:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10433:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10432:14:20"
            },
            "returnParameters": {
              "id": 27187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27238,
                  "src": "10468:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27185,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10468:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10467:15:20"
            },
            "scope": 27349,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27261,
            "nodeType": "FunctionDefinition",
            "src": "12150:183:20",
            "nodes": [],
            "body": {
              "id": 27260,
              "nodeType": "Block",
              "src": "12241:92:20",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 27249,
                      "name": "knownMarketplace",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26985,
                      "src": "12255:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 27251,
                    "indexExpression": {
                      "id": 27250,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27243,
                      "src": "12272:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12255:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27259,
                  "nodeType": "IfStatement",
                  "src": "12251:76:20",
                  "trueBody": {
                    "id": 27258,
                    "nodeType": "Block",
                    "src": "12277:50:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 27256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 27252,
                              "name": "lastOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26990,
                              "src": "12291:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 27254,
                            "indexExpression": {
                              "id": 27253,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27245,
                              "src": "12301:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12291:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 27255,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27241,
                            "src": "12312:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12291:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 27257,
                        "nodeType": "ExpressionStatement",
                        "src": "12291:25:20"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              24079
            ],
            "documentation": {
              "id": 27239,
              "nodeType": "StructuredDocumentation",
              "src": "11969:176:20",
              "text": "Used to implement known marketplace functionality\n @param from token transfer from\n @param to token transfer to\n @param tokenId token being transferred"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12159:20:20",
            "overrides": {
              "id": 27247,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12232:8:20"
            },
            "parameters": {
              "id": 27246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27241,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12188:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27261,
                  "src": "12180:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12180:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27243,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12202:2:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27261,
                  "src": "12194:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12194:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27245,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12214:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27261,
                  "src": "12206:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12206:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12179:43:20"
            },
            "returnParameters": {
              "id": 27248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12241:0:20"
            },
            "scope": 27349,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 27304,
            "nodeType": "FunctionDefinition",
            "src": "12496:303:20",
            "nodes": [],
            "body": {
              "id": 27303,
              "nodeType": "Block",
              "src": "12573:226:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    27270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27270,
                      "mutability": "mutable",
                      "name": "zorbFor",
                      "nameLocation": "12591:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 27303,
                      "src": "12583:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 27269,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12583:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27280,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27278,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27264,
                        "src": "12629:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 27274,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12614:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZorbNFT_$27349",
                                  "typeString": "contract ZorbNFT"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ZorbNFT_$27349",
                                  "typeString": "contract ZorbNFT"
                                }
                              ],
                              "id": 27273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12606:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27272,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12606:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12606:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 27271,
                          "name": "INFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26963,
                          "src": "12601:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INFT_$26963_$",
                            "typeString": "type(contract INFT)"
                          }
                        },
                        "id": 27276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12601:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INFT_$26963",
                          "typeString": "contract INFT"
                        }
                      },
                      "id": 27277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26962,
                      "src": "12601:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 27279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12601:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12583:54:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 27292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 27281,
                        "name": "knownMarketplace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26985,
                        "src": "12651:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 27283,
                      "indexExpression": {
                        "id": 27282,
                        "name": "zorbFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27270,
                        "src": "12668:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12651:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 27291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 27284,
                          "name": "lastOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26990,
                          "src": "12680:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 27286,
                        "indexExpression": {
                          "id": 27285,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27264,
                          "src": "12690:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12680:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 27289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12710:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 27288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12702:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27287,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12702:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12702:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "12680:34:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12651:63:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27300,
                  "nodeType": "IfStatement",
                  "src": "12647:122:20",
                  "trueBody": {
                    "id": 27299,
                    "nodeType": "Block",
                    "src": "12716:53:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 27297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 27293,
                            "name": "zorbFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27270,
                            "src": "12730:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 27294,
                              "name": "lastOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26990,
                              "src": "12740:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 27296,
                            "indexExpression": {
                              "id": 27295,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27264,
                              "src": "12750:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12740:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12730:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 27298,
                        "nodeType": "ExpressionStatement",
                        "src": "12730:28:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 27301,
                    "name": "zorbFor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27270,
                    "src": "12785:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 27268,
                  "id": 27302,
                  "nodeType": "Return",
                  "src": "12778:14:20"
                }
              ]
            },
            "documentation": {
              "id": 27262,
              "nodeType": "StructuredDocumentation",
              "src": "12339:152:20",
              "text": "Determines the actual rendering address instead of just owner address for given zorb id\n @param tokenId id of token to get render address for"
            },
            "functionSelector": "91557ac4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getZorbRenderAddress",
            "nameLocation": "12505:20:20",
            "parameters": {
              "id": 27265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27264,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12534:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27304,
                  "src": "12526:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12526:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12525:17:20"
            },
            "returnParameters": {
              "id": 27268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27304,
                  "src": "12564:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12564:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12563:9:20"
            },
            "scope": 27349,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27348,
            "nodeType": "FunctionDefinition",
            "src": "12918:833:20",
            "nodes": [],
            "body": {
              "id": 27347,
              "nodeType": "Block",
              "src": "12998:753:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27315,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27307,
                            "src": "13024:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 27314,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23664,
                          "src": "13016:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 27316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13016:16:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e",
                        "id": 27317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13034:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61d86b1e3c12c951c02d217cf44581e00e08acff2e68348ead474ea4aeb1339d",
                          "typeString": "literal_string \"No token\""
                        },
                        "value": "No token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61d86b1e3c12c951c02d217cf44581e00e08acff2e68348ead474ea4aeb1339d",
                          "typeString": "literal_string \"No token\""
                        }
                      ],
                      "id": 27313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13008:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13008:37:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27319,
                  "nodeType": "ExpressionStatement",
                  "src": "13008:37:20"
                },
                {
                  "assignments": [
                    27321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27321,
                      "mutability": "mutable",
                      "name": "idString",
                      "nameLocation": "13070:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 27347,
                      "src": "13056:22:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 27320,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "13056:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27326,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27324,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27307,
                        "src": "13111:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27322,
                        "name": "sharedMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26998,
                        "src": "13081:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPublicSharedMetadata_$26943",
                          "typeString": "contract IPublicSharedMetadata"
                        }
                      },
                      "id": 27323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberToString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26942,
                      "src": "13081:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure external returns (string memory)"
                      }
                    },
                    "id": 27325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13081:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13056:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7b226e616d65223a20225a6f72622023",
                            "id": 27331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13218:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_30c69cba23625c8362890038ae014c70f28257d17673cb89c10242fb81206755",
                              "typeString": "literal_string \"{\"name\": \"Zorb #\""
                            },
                            "value": "{\"name\": \"Zorb #"
                          },
                          {
                            "id": 27332,
                            "name": "idString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27321,
                            "src": "13254:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "222c20226465736372697074696f6e223a20225a6f726273207765726520646973747269627574656420666f722066726565206279205a4f5241206f6e204e65772059656172e280997320323032322e2045616368204e465420696d62756573207468652070726f70657274696573206f66206974732077616c6c657420686f6c6465722c20616e64207768656e2073656e7420746f20736f6d656f6e6520656c73652c2077696c6c207472616e73666f726d2e5c6e5c6e566965772074686973204e4654206174205b7a6f72622e6465762f6e66742f",
                            "id": 27333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "unicodeString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13280:226:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_06557d5b41245292077b6d2270f715c0d921d920cd0b532ca51ed4ae54fde8cb",
                              "typeString": "literal_string hex\"222c20226465736372697074696f6e223a20225a6f726273207765726520646973747269627574656420666f722066726565206279205a4f5241206f6e204e65772059656172e280997320323032322e2045616368204e465420696d62756573207468652070726f70657274696573206f66206974732077616c6c657420686f6c6465722c20616e64207768656e2073656e7420746f20736f6d656f6e6520656c73652c2077696c6c207472616e73666f726d2e5c6e5c6e566965772074686973204e4654206174205b7a6f72622e6465762f6e66742f\""
                            },
                            "value": "\", \"description\": \"Zorbs were distributed for free by ZORA on New Year’s 2022. Each NFT imbues the properties of its wallet holder, and when sent to someone else, will transform.\\n\\nView this NFT at [zorb.dev/nft/"
                          },
                          {
                            "id": 27334,
                            "name": "idString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27321,
                            "src": "13524:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "5d2868747470733a2f2f7a6f72622e6465762f6e66742f",
                            "id": 27335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13550:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f48cd522f2189aa5cc79d849406093852ae8aab4279e20aa3c240fe6d2e531e5",
                              "typeString": "literal_string \"](https://zorb.dev/nft/\""
                            },
                            "value": "](https://zorb.dev/nft/"
                          },
                          {
                            "id": 27336,
                            "name": "idString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27321,
                            "src": "13593:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "29222c2022696d616765223a2022",
                            "id": 27337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13619:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c0dc342d93215955ab792101245040a1f39ef90d6151bec65c9a97038535767",
                              "typeString": "literal_string \")\", \"image\": \"\""
                            },
                            "value": ")\", \"image\": \""
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 27340,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27307,
                                    "src": "13689:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 27339,
                                  "name": "getZorbRenderAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27304,
                                  "src": "13668:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view returns (address)"
                                  }
                                },
                                "id": 27341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13668:29:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 27338,
                              "name": "zorbForAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27238,
                              "src": "13653:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) view returns (string memory)"
                              }
                            },
                            "id": 27342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13653:45:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "227d",
                            "id": 27343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13716:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                              "typeString": "literal_string \"\"}\""
                            },
                            "value": "\"}"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_30c69cba23625c8362890038ae014c70f28257d17673cb89c10242fb81206755",
                              "typeString": "literal_string \"{\"name\": \"Zorb #\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_06557d5b41245292077b6d2270f715c0d921d920cd0b532ca51ed4ae54fde8cb",
                              "typeString": "literal_string hex\"222c20226465736372697074696f6e223a20225a6f726273207765726520646973747269627574656420666f722066726565206279205a4f5241206f6e204e65772059656172e280997320323032322e2045616368204e465420696d62756573207468652070726f70657274696573206f66206974732077616c6c657420686f6c6465722c20616e64207768656e2073656e7420746f20736f6d656f6e6520656c73652c2077696c6c207472616e73666f726d2e5c6e5c6e566965772074686973204e4654206174205b7a6f72622e6465762f6e66742f\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f48cd522f2189aa5cc79d849406093852ae8aab4279e20aa3c240fe6d2e531e5",
                              "typeString": "literal_string \"](https://zorb.dev/nft/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7c0dc342d93215955ab792101245040a1f39ef90d6151bec65c9a97038535767",
                              "typeString": "literal_string \")\", \"image\": \"\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                              "typeString": "literal_string \"\"}\""
                            }
                          ],
                          "expression": {
                            "id": 27329,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13184:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 27330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "13184:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 27344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13184:550:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 27327,
                        "name": "sharedMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26998,
                        "src": "13137:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPublicSharedMetadata_$26943",
                          "typeString": "contract IPublicSharedMetadata"
                        }
                      },
                      "id": 27328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encodeMetadataJSON",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26934,
                      "src": "13137:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes memory) pure external returns (string memory)"
                      }
                    },
                    "id": 27345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13137:607:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 27312,
                  "id": 27346,
                  "nodeType": "Return",
                  "src": "13130:614:20"
                }
              ]
            },
            "baseFunctions": [
              23433
            ],
            "documentation": {
              "id": 27305,
              "nodeType": "StructuredDocumentation",
              "src": "12805:108:20",
              "text": "TokenURI function returning on-chain encoded SVG for each Zorb\n @param tokenId token id to render"
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "12927:8:20",
            "overrides": {
              "id": 27309,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12965:8:20"
            },
            "parameters": {
              "id": 27308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27307,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12944:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27348,
                  "src": "12936:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12936:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12935:17:20"
            },
            "returnParameters": {
              "id": 27312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27311,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27348,
                  "src": "12983:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27310,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12983:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12982:15:20"
            },
            "scope": 27349,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26965,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24091,
              "src": "7578:6:20"
            },
            "id": 26966,
            "nodeType": "InheritanceSpecifier",
            "src": "7578:6:20"
          },
          {
            "baseName": {
              "id": 26967,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23225,
              "src": "7586:7:20"
            },
            "id": 26968,
            "nodeType": "InheritanceSpecifier",
            "src": "7586:7:20"
          }
        ],
        "canonicalName": "ZorbNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 26964,
          "nodeType": "StructuredDocumentation",
          "src": "7464:94:20",
          "text": "ZorbNFT\n Design and Project: tw: lily___digital\n Solidity: tw: isiain\n ZORA LABS"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27349,
          23225,
          24091,
          24252,
          24207,
          24870,
          24882,
          24569
        ],
        "name": "ZorbNFT",
        "nameLocation": "7567:7:20",
        "scope": 27350,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 20
}